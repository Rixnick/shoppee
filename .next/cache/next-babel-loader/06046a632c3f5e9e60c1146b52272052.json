{"ast":null,"code":"var _jsxFileName = \"/home/loki/Desktop/Projects/Shoppin/shop-client/components/ManagerProducts.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport fetch from 'isomorphic-unfetch';\nimport Router from 'next/router';\nimport { QUERY_PRODUCTS, MY_PRODUCTS, CREATE_PRODUCT } from '../graphql/Products';\nimport { Upload, message } from 'antd';\n\nfunction beforeUpload(file) {\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n  if (!isJpgOrPng) {\n    message.error('You can only upload JPG/PNG file!');\n  }\n\n  const isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    message.error('Image must smaller than 2MB!');\n  }\n\n  return isJpgOrPng && isLt2M;\n} //\n\n\nconst ManageProducts = () => {\n  state = {\n    loading: false\n  }; //Create State\n\n  const {\n    0: file,\n    1: setFile\n  } = useState(null);\n  const {\n    0: productData,\n    1: setProductData\n  } = useState({\n    name: '',\n    description: '',\n    price: '',\n    imageUrl: ''\n  });\n  const [createProduct, {\n    loading,\n    error\n  }] = useMutation(CREATE_PRODUCT, {\n    refetchQueries: [{\n      query: QUERY_PRODUCTS\n    }]\n  });\n\n  const handleChange = e => setProductData(_objectSpread(_objectSpread({}, productData), {}, {\n    [e.target.name]: e.target.value\n  }));\n\n  const selectFile = e => {\n    const files = e.target.files;\n    setFile(files[0]); //console.log(files)\n  }; //Upload File to Cloudinary\n\n\n  const uploadFile = async () => {\n    const data = new FormData();\n    data.append('file', file);\n    data.append('upload_preset', 'shoppin');\n    const res = await fetch('https://api.cloudinary.com/v1_1/swizce/image/upload', {\n      method: 'post',\n      body: data\n    });\n    const result = await res.json(); //console.log('image result',  result)\n\n    return result.secure_url;\n  };\n\n  const handleSubmit = async e => {\n    try {\n      e.preventDefault();\n      const url = await uploadFile(); // console.log('image Url:', url)\n\n      if (url) {\n        const result = await createProduct({\n          variables: _objectSpread(_objectSpread({}, productData), {}, {\n            price: +productData.price,\n            imageUrl: url\n          })\n        }); //console.log('Product Data:', result)\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }; //Uploader handle change\n\n\n  handleChange = info => {\n    if (info.file.status === 'uploading') {\n      this.setState({\n        loading: true\n      });\n      return;\n    }\n\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, imageUrl => this.setState({\n        imageUrl,\n        loading: false\n      }));\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"create_product_page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, __jsx(\"form\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      margin: 'auto',\n      width: '45%'\n    },\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, \"Create My Product\"), __jsx(\"button\", {\n    onClick: () => Router.push('/manage'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, \"Back\"), __jsx(\"input\", {\n    style: {\n      margin: '5px',\n      height: '30px'\n    },\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Enter product name\",\n    value: productData.name,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }), __jsx(\"input\", {\n    style: {\n      margin: '5px',\n      height: '30px'\n    },\n    type: \"text\",\n    name: \"description\",\n    placeholder: \"Enter product description\",\n    value: productData.description,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }), __jsx(\"input\", {\n    style: {\n      margin: '5px',\n      height: '30px'\n    },\n    type: \"number\",\n    name: \"price\",\n    placeholder: \"Enter Product Price\",\n    value: productData.price,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }), __jsx(\"input\", {\n    style: {\n      margin: '5px',\n      height: '30px'\n    },\n    type: \"file\",\n    name: \"file\",\n    placeholder: \"Enter Product Image\" //value={productData.imageUrl}\n    ,\n    onChange: selectFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }), __jsx(Upload, {\n    name: \"avatar\",\n    listType: \"picture-card\",\n    className: \"avatar-uploader\",\n    showUploadList: false,\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n    beforeUpload: beforeUpload,\n    onChange: this.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, imageUrl ? __jsx(\"img\", {\n    src: imageUrl,\n    alt: \"avatar\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 41\n    }\n  }) : uploadButton), __jsx(\"div\", {\n    style: {\n      width: '100%',\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, error && __jsx(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 35\n    }\n  }, error.graphQLErrors[0].message), (!productData.name || !productData.description || !productData.price || !file) && __jsx(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }, \"Please Fill all product required...!\")), __jsx(\"button\", {\n    className: \"btn-submit\",\n    style: {\n      cursor: !productData.name || !productData.description || !productData.price || !file || loading ? 'not-allowed' : 'pointer'\n    },\n    type: \"submit\",\n    disabled: !productData.name || !productData.description || !productData.price || !file || loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, \"Submit\", loading ? 'Submiting...' : ''))));\n};\n\nexport default ManageProducts;","map":{"version":3,"sources":["/home/loki/Desktop/Projects/Shoppin/shop-client/components/ManagerProducts.jsx"],"names":["React","useState","useMutation","fetch","Router","QUERY_PRODUCTS","MY_PRODUCTS","CREATE_PRODUCT","Upload","message","beforeUpload","file","isJpgOrPng","type","error","isLt2M","size","ManageProducts","state","loading","setFile","productData","setProductData","name","description","price","imageUrl","createProduct","refetchQueries","query","handleChange","e","target","value","selectFile","files","uploadFile","data","FormData","append","res","method","body","result","json","secure_url","handleSubmit","preventDefault","url","variables","console","log","info","status","setState","getBase64","originFileObj","display","flexDirection","margin","width","push","height","uploadButton","color","graphQLErrors","cursor"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,cAAT,EAAyBC,WAAzB,EAAsCC,cAAtC,QAA4D,qBAA5D;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,MAAhC;;AAIA,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AACxB,QAAMC,UAAU,GAAGD,IAAI,CAACE,IAAL,KAAc,YAAd,IAA8BF,IAAI,CAACE,IAAL,KAAc,WAA/D;;AACA,MAAI,CAACD,UAAL,EAAiB;AACfH,IAAAA,OAAO,CAACK,KAAR,CAAc,mCAAd;AACD;;AACD,QAAMC,MAAM,GAAGJ,IAAI,CAACK,IAAL,GAAY,IAAZ,GAAmB,IAAnB,GAA0B,CAAzC;;AACA,MAAI,CAACD,MAAL,EAAa;AACXN,IAAAA,OAAO,CAACK,KAAR,CAAc,8BAAd;AACD;;AACD,SAAOF,UAAU,IAAIG,MAArB;AACD,C,CAQH;;;AACA,MAAME,cAAc,GAAG,MAAM;AACzBC,EAAAA,KAAK,GAAG;AACJC,IAAAA,OAAO,EAAE;AADL,GAAR,CADyB,CAIzB;;AACA,QAAM;AAAA,OAACR,IAAD;AAAA,OAAOS;AAAP,MAAkBnB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM;AAAA,OAACoB,WAAD;AAAA,OAAcC;AAAd,MAAgCrB,QAAQ,CAAC;AAC3CsB,IAAAA,IAAI,EAAE,EADqC;AAE3CC,IAAAA,WAAW,EAAE,EAF8B;AAG3CC,IAAAA,KAAK,EAAE,EAHoC;AAI3CC,IAAAA,QAAQ,EAAE;AAJiC,GAAD,CAA9C;AAOA,QAAM,CAACC,aAAD,EAAgB;AAAER,IAAAA,OAAF;AAAWL,IAAAA;AAAX,GAAhB,IAAsCZ,WAAW,CAACK,cAAD,EAAiB;AACpEqB,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAExB;AAAT,KAAD;AADoD,GAAjB,CAAvD;;AAIA,QAAMyB,YAAY,GAAGC,CAAC,IAAIT,cAAc,iCACjCD,WADiC;AAEpC,KAACU,CAAC,CAACC,MAAF,CAAST,IAAV,GAAiBQ,CAAC,CAACC,MAAF,CAASC;AAFU,KAAxC;;AAKA,QAAMC,UAAU,GAAGH,CAAC,IAAI;AACpB,UAAMI,KAAK,GAAGJ,CAAC,CAACC,MAAF,CAASG,KAAvB;AACAf,IAAAA,OAAO,CAACe,KAAK,CAAC,CAAD,CAAN,CAAP,CAFoB,CAGpB;AACH,GAJD,CAtByB,CA4BzB;;;AACA,QAAMC,UAAU,GAAG,YAAY;AAC3B,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoB5B,IAApB;AACA0B,IAAAA,IAAI,CAACE,MAAL,CAAY,eAAZ,EAA6B,SAA7B;AACA,UAAMC,GAAG,GAAG,MAAMrC,KAAK,CAAC,qDAAD,EAAwD;AAC3EsC,MAAAA,MAAM,EAAE,MADmE;AAE3EC,MAAAA,IAAI,EAAEL;AAFqE,KAAxD,CAAvB;AAIA,UAAMM,MAAM,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAArB,CAR2B,CAS3B;;AACA,WAAOD,MAAM,CAACE,UAAd;AACH,GAXD;;AAcA,QAAMC,YAAY,GAAG,MAAMf,CAAN,IAAW;AAC5B,QAAI;AACAA,MAAAA,CAAC,CAACgB,cAAF;AACA,YAAMC,GAAG,GAAG,MAAMZ,UAAU,EAA5B,CAFA,CAGA;;AACA,UAAIY,GAAJ,EAAS;AACL,cAAML,MAAM,GAAG,MAAMhB,aAAa,CAAC;AAC/BsB,UAAAA,SAAS,kCACF5B,WADE;AAELI,YAAAA,KAAK,EAAE,CAACJ,WAAW,CAACI,KAFf;AAGLC,YAAAA,QAAQ,EAAEsB;AAHL;AADsB,SAAD,CAAlC,CADK,CAQL;AACH;AAEJ,KAfD,CAeE,OAAOlC,KAAP,EAAc;AACZoC,MAAAA,OAAO,CAACC,GAAR,CAAYrC,KAAZ;AACH;AACJ,GAnBD,CA3CyB,CAgEzB;;;AACAgB,EAAAA,YAAY,GAAGsB,IAAI,IAAI;AACnB,QAAIA,IAAI,CAACzC,IAAL,CAAU0C,MAAV,KAAqB,WAAzB,EAAsC;AACpC,WAAKC,QAAL,CAAc;AAAEnC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA;AACD;;AACD,QAAIiC,IAAI,CAACzC,IAAL,CAAU0C,MAAV,KAAqB,MAAzB,EAAiC;AAC/B;AACAE,MAAAA,SAAS,CAACH,IAAI,CAACzC,IAAL,CAAU6C,aAAX,EAA0B9B,QAAQ,IACzC,KAAK4B,QAAL,CAAc;AACZ5B,QAAAA,QADY;AAEZP,QAAAA,OAAO,EAAE;AAFG,OAAd,CADO,CAAT;AAMD;AACF,GAdH;;AAgBA,SACI,4BACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAM,IAAA,KAAK,EAAE;AAAEsC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,aAAa,EAAE,QAAlC;AAA4CC,MAAAA,MAAM,EAAE,MAApD;AAA4DC,MAAAA,KAAK,EAAE;AAAnE,KAAb;AACI,IAAA,QAAQ,EAAEd,YADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFJ,EAGI;AAAQ,IAAA,OAAO,EAAE,MAAM1C,MAAM,CAACyD,IAAP,CAAY,SAAZ,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAII;AAAO,IAAA,KAAK,EAAE;AAAEF,MAAAA,MAAM,EAAE,KAAV;AAAiBG,MAAAA,MAAM,EAAE;AAAzB,KAAd;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,oBAHhB;AAII,IAAA,KAAK,EAAEzC,WAAW,CAACE,IAJvB;AAKI,IAAA,QAAQ,EAAEO,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAWI;AAAO,IAAA,KAAK,EAAE;AAAE6B,MAAAA,MAAM,EAAE,KAAV;AAAiBG,MAAAA,MAAM,EAAE;AAAzB,KAAd;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,aAFT;AAGI,IAAA,WAAW,EAAC,2BAHhB;AAII,IAAA,KAAK,EAAEzC,WAAW,CAACG,WAJvB;AAKI,IAAA,QAAQ,EAAEM,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAkBI;AAAO,IAAA,KAAK,EAAE;AAAE6B,MAAAA,MAAM,EAAE,KAAV;AAAiBG,MAAAA,MAAM,EAAE;AAAzB,KAAd;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,WAAW,EAAC,qBAHhB;AAII,IAAA,KAAK,EAAEzC,WAAW,CAACI,KAJvB;AAKI,IAAA,QAAQ,EAAEK,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,EAyBI;AAAO,IAAA,KAAK,EAAE;AAAE6B,MAAAA,MAAM,EAAE,KAAV;AAAiBG,MAAAA,MAAM,EAAE;AAAzB,KAAd;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,qBAHhB,CAII;AAJJ;AAKI,IAAA,QAAQ,EAAE5B,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,EAgCI,MAAC,MAAD;AACQ,IAAA,IAAI,EAAC,QADb;AAEQ,IAAA,QAAQ,EAAC,cAFjB;AAGQ,IAAA,SAAS,EAAC,iBAHlB;AAIQ,IAAA,cAAc,EAAE,KAJxB;AAKQ,IAAA,MAAM,EAAC,kDALf;AAMQ,IAAA,YAAY,EAAExB,YANtB;AAOQ,IAAA,QAAQ,EAAE,KAAKoB,YAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASSJ,QAAQ,GAAG;AAAK,IAAA,GAAG,EAAEA,QAAV;AAAoB,IAAA,GAAG,EAAC,QAAxB;AAAiC,IAAA,KAAK,EAAE;AAAEkC,MAAAA,KAAK,EAAE;AAAT,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAmEG,YATpF,CAhCJ,EA2CI;AAAK,IAAA,KAAK,EAAE;AAAEH,MAAAA,KAAK,EAAE,MAAT;AAAiBD,MAAAA,MAAM,EAAE;AAAzB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK7C,KAAK,IAAI;AAAG,IAAA,KAAK,EAAE;AAAEkD,MAAAA,KAAK,EAAE;AAAT,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BlD,KAAK,CAACmD,aAAN,CAAoB,CAApB,EAAuBxD,OAApD,CADd,EAEK,CACG,CAACY,WAAW,CAACE,IAAb,IACA,CAACF,WAAW,CAACG,WADb,IAEA,CAACH,WAAW,CAACI,KAFb,IAGA,CAACd,IAJJ,KAMG;AAAG,IAAA,KAAK,EAAE;AAAEqD,MAAAA,KAAK,EAAE;AAAT,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CARR,CA3CJ,EAsDI;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,KAAK,EAAE;AAClCE,MAAAA,MAAM,EAAE,CAAC7C,WAAW,CAACE,IAAb,IAAqB,CAACF,WAAW,CAACG,WAAlC,IAAiD,CAACH,WAAW,CAACI,KAA9D,IAAuE,CAACd,IAAxE,IAAgFQ,OAAhF,GAA0F,aAA1F,GAA0G;AADhF,KAAtC;AAGI,IAAA,IAAI,EAAC,QAHT;AAII,IAAA,QAAQ,EAAE,CAACE,WAAW,CAACE,IAAb,IAAqB,CAACF,WAAW,CAACG,WAAlC,IAAiD,CAACH,WAAW,CAACI,KAA9D,IAAuE,CAACd,IAAxE,IAAgFQ,OAJ9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAKQA,OAAO,GAAG,cAAH,GAAoB,EALnC,CAtDJ,CAFJ,CADJ,CADJ;AAqEH,CAtJD;;AAwJA,eAAeF,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport fetch from 'isomorphic-unfetch';\nimport Router from 'next/router';\nimport { QUERY_PRODUCTS, MY_PRODUCTS, CREATE_PRODUCT } from '../graphql/Products';\nimport { Upload, message } from 'antd';\n\n\n\nfunction beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n    return isJpgOrPng && isLt2M;\n  }\n\n\n\n\n\n\n\n//\nconst ManageProducts = () => {\n    state = {\n        loading: false,\n      };\n    //Create State\n    const [file, setFile] = useState(null)\n    const [productData, setProductData] = useState({\n        name: '',\n        description: '',\n        price: '',\n        imageUrl: ''\n    })\n\n    const [createProduct, { loading, error }] = useMutation(CREATE_PRODUCT, {\n        refetchQueries: [{ query: QUERY_PRODUCTS }]\n    })\n\n    const handleChange = e => setProductData({\n        ...productData,\n        [e.target.name]: e.target.value\n    })\n\n    const selectFile = e => {\n        const files = e.target.files\n        setFile(files[0])\n        //console.log(files)\n    }\n\n    //Upload File to Cloudinary\n    const uploadFile = async () => {\n        const data = new FormData()\n        data.append('file', file)\n        data.append('upload_preset', 'shoppin')\n        const res = await fetch('https://api.cloudinary.com/v1_1/swizce/image/upload', {\n            method: 'post',\n            body: data\n        })\n        const result = await res.json()\n        //console.log('image result',  result)\n        return result.secure_url\n    }\n\n\n    const handleSubmit = async e => {\n        try {\n            e.preventDefault()\n            const url = await uploadFile()\n            // console.log('image Url:', url)\n            if (url) {\n                const result = await createProduct({\n                    variables: {\n                        ...productData,\n                        price: +productData.price,\n                        imageUrl: url\n                    },\n                })\n                //console.log('Product Data:', result)\n            }\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    //Uploader handle change\n    handleChange = info => {\n        if (info.file.status === 'uploading') {\n          this.setState({ loading: true });\n          return;\n        }\n        if (info.file.status === 'done') {\n          // Get this url from response in real world.\n          getBase64(info.file.originFileObj, imageUrl =>\n            this.setState({\n              imageUrl,\n              loading: false,\n            }),\n          );\n        }\n      };\n\n    return (\n        <>\n            <div className=\"create_product_page\">\n           \n                <form style={{ display: 'flex', flexDirection: 'column', margin: 'auto', width: '45%' }}\n                    onSubmit={handleSubmit} >\n                    <h3>Create My Product</h3>\n                    <button onClick={() => Router.push('/manage')}>Back</button>\n                    <input style={{ margin: '5px', height: '30px' }}\n                        type=\"text\"\n                        name=\"name\"\n                        placeholder=\"Enter product name\"\n                        value={productData.name}\n                        onChange={handleChange}\n                    />\n                    <input style={{ margin: '5px', height: '30px' }}\n                        type=\"text\"\n                        name=\"description\"\n                        placeholder=\"Enter product description\"\n                        value={productData.description}\n                        onChange={handleChange}\n                    />\n                    <input style={{ margin: '5px', height: '30px' }}\n                        type=\"number\"\n                        name=\"price\"\n                        placeholder=\"Enter Product Price\"\n                        value={productData.price}\n                        onChange={handleChange}\n                    />\n                    <input style={{ margin: '5px', height: '30px' }}\n                        type=\"file\"\n                        name=\"file\"\n                        placeholder=\"Enter Product Image\"\n                        //value={productData.imageUrl}\n                        onChange={selectFile}\n                    />\n                    <Upload\n                            name=\"avatar\"\n                            listType=\"picture-card\"\n                            className=\"avatar-uploader\"\n                            showUploadList={false}\n                            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                            beforeUpload={beforeUpload}\n                            onChange={this.handleChange}\n                        >\n                            {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n                        </Upload>\n                    <div style={{ width: '100%', margin: 'auto' }}>\n                        {error && <p style={{ color: 'red' }}>{error.graphQLErrors[0].message}</p>}\n                        {(\n                            !productData.name ||\n                            !productData.description ||\n                            !productData.price ||\n                            !file\n                        ) &&\n                            <p style={{ color: 'red' }}>Please Fill all product required...!</p>\n                        }\n                    </div>\n                    <button className=\"btn-submit\" style={{\n                        cursor: !productData.name || !productData.description || !productData.price || !file || loading ? 'not-allowed' : 'pointer',\n                    }}\n                        type='submit'\n                        disabled={!productData.name || !productData.description || !productData.price || !file || loading}\n                    >Submit{loading ? 'Submiting...' : ''}</button>\n                    \n                </form>\n            </div>\n        </>\n    )\n}\n\nexport default ManageProducts\n"]},"metadata":{},"sourceType":"module"}