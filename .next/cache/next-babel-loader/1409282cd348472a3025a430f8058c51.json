{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Link from 'next/link';\nimport { useQuery } from '@apollo/react-hooks';\nimport { AuthContext } from '../contexts/AuthProvider';\nimport { QUERY_PRODUCTS } from '../graphql/Products';\nimport Router from 'next/router';\nimport '../styles/_products.scss';\n\nfunction Products() {\n  var _useQuery = useQuery(QUERY_PRODUCTS),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error; //, {pollInterval:3000} Add pollInterval to refresh page per second\n\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user;\n\n  if (error) return __jsx(\"p\", null, \"Ooops....! Something went wrong, Plz try again later\");\n  if (loading) return __jsx(\"p\", null, \"loading...\");\n  return __jsx(\"div\", {\n    className: \"container\"\n  }, data.products.map(function (prod) {\n    return __jsx(\"div\", {\n      className: \"product-container\"\n    }, __jsx(\"figure\", null, user && user.id === prod.user.id ? __jsx(Link, {\n      href: \"/manageProducts\"\n    }, __jsx(\"img\", {\n      src: prod.imageUrl,\n      alt: prod.description\n    })) : __jsx(Link, {\n      href: \"/products/product_detail\",\n      as: \"/products/\".concat(prod.id)\n    }, __jsx(\"img\", {\n      src: prod.imageUrl,\n      alt: prod.description\n    }))), __jsx(\"h3\", null, prod.name), __jsx(\"p\", {\n      className: \"description-text\"\n    }, prod.description), __jsx(\"p\", null, prod.price, \"-THB\"), user && user.id === prod.user.id ? __jsx(\"button\", {\n      className: \"btn-manage\",\n      onClick: function onClick() {\n        return Router.push('/manageProducts');\n      }\n    }, \"Manage Products\") : __jsx(\"button\", {\n      className: \"btn-add-carts\",\n      onClick: function onClick() {\n        return Router.push('/carts');\n      }\n    }, \"Add To Cart\"));\n  }));\n}\n\nexport default Products;","map":null,"metadata":{},"sourceType":"module"}