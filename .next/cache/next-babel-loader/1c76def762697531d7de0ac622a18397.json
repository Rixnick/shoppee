{"ast":null,"code":"var _jsxFileName = \"/home/loki/Desktop/Projects/Shoppin/shop-client/components/Products.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Link from 'next/link';\nimport { useQuery } from '@apollo/react-hooks';\nimport { AuthContext } from '../contexts/AuthProvider';\nimport { QUERY_PRODUCTS } from '../graphql/Products';\nimport Router from 'next/router';\nimport '../styles/_products.scss';\n\nfunction Products() {\n  _s();\n\n  var _this = this;\n\n  var _useQuery = useQuery(QUERY_PRODUCTS),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error; //, {pollInterval:3000} Add pollInterval to refresh page per second\n\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user;\n\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 20\n    }\n  }, \"Ooops....! Something went wrong, Plz try again later\");\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 22\n    }\n  }, \"loading...\");\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, data.products.map(function (prod) {\n    return (// <div className=\"product-container\" key={prod.id}>\n      //     <Link href='/products/product_detail' as={`/products/${prod.id}`}>\n      //       <a>\n      //       <img src={prod.imageUrl} alt={prod.description} width=\"250px\"/>\n      //       </a>\n      //     </Link>\n      //     <h3>{prod.name}</h3>\n      //     <h4>{prod.price} THB</h4>\n      //     {\n      //       user && user.id === prod.user.id ? \n      //       <button className=\"btn-manage\"\n      //         onClick={() => Router.push('/manageProducts')}\n      //       >Manage Products</button> :\n      //       <button className=\"btn-add-carts\"\n      //     >Add To Cart</button>\n      //     }     \n      // </div> \n      __jsx(\"div\", {\n        className: \"post-container\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, __jsx(\"figure\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, __jsx(Link, {\n        to: post.link,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, __jsx(\"img\", {\n        src: prod.imageUrl,\n        alt: prod.description,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }))), __jsx(TagRow, {\n        tags: post.categories,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }), __jsx(\"h2\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, post.title), __jsx(\"p\", {\n        className: \"author-text\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, \"By:\", __jsx(Link, {\n        to: \"/author/\".concat(post.author),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, post.author)), __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, \"- \", post.date)), __jsx(\"p\", {\n        className: \"description-text\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, post.description), __jsx(Link, {\n        to: post.link,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, \"Read More...\"))\n    );\n  }));\n}\n\n_s(Products, \"vOOE4j1IMfMyzn5kdqigUNwx0Qk=\", false, function () {\n  return [useQuery];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/loki/Desktop/Projects/Shoppin/shop-client/components/Products.jsx"],"names":["React","useContext","Link","useQuery","AuthContext","QUERY_PRODUCTS","Router","Products","data","loading","error","user","products","map","prod","post","link","imageUrl","description","categories","title","author","date"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SAAQC,WAAR,QAA0B,0BAA1B;AACA,SAAQC,cAAR,QAA6B,qBAA7B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAO,0BAAP;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AAAA,kBACaJ,QAAQ,CAACE,cAAD,CADrB;AAAA,MACXG,IADW,aACXA,IADW;AAAA,MACLC,OADK,aACLA,OADK;AAAA,MACIC,KADJ,aACIA,KADJ,EACsC;;;AADtC,oBAEDT,UAAU,CAACG,WAAD,CAFT;AAAA,MAEVO,IAFU,eAEVA,IAFU;;AAIlB,MAAGD,KAAH,EAAU,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAAP;AACV,MAAGD,OAAH,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACZ,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACI,QAAL,CAAcC,GAAd,CAAkB,UAAAC,IAAI;AAAA,WACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,EAAE,EAAEC,IAAI,CAACC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEF,IAAI,CAACG,QAAf;AAAyB,QAAA,GAAG,EAAEH,IAAI,CAACI,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADA,EAMA,MAAC,MAAD;AAAQ,QAAA,IAAI,EAAEH,IAAI,CAACI,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKJ,IAAI,CAACK,KAAV,CAPA,EAQA;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEE,MAAC,IAAD;AAAM,QAAA,EAAE,oBAAaL,IAAI,CAACM,MAAlB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,IAAI,CAACM,MADR,CAFF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACMN,IAAI,CAACO,IADX,CAPF,CARA,EAoBA;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGP,IAAI,CAACG,WADR,CApBA,EAuBA,MAAC,IAAD;AAAM,QAAA,EAAE,EAAEH,IAAI,CAACC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAvBA;AAnBqB;AAAA,GAAtB,CADH,CADF;AAiDD;;GAvDQT,Q;UACwBJ,Q;;;KADxBI,Q;AAyDT,eAAeA,QAAf","sourcesContent":["import React, { useContext } from 'react';\nimport Link from 'next/link';\nimport {useQuery} from '@apollo/react-hooks';\nimport {AuthContext} from '../contexts/AuthProvider';\nimport {QUERY_PRODUCTS} from '../graphql/Products';\nimport Router from 'next/router';\nimport '../styles/_products.scss';\n\nfunction Products() {\n  const {data, loading, error} = useQuery(QUERY_PRODUCTS) //, {pollInterval:3000} Add pollInterval to refresh page per second\n  const { user } = useContext(AuthContext)\n\n  if(error) return <p>Ooops....! Something went wrong, Plz try again later</p>\n  if(loading) return <p>loading...</p>\n  return (\n    <div className=\"container\">\n      {data.products.map(prod => \n          // <div className=\"product-container\" key={prod.id}>\n          //     <Link href='/products/product_detail' as={`/products/${prod.id}`}>\n          //       <a>\n          //       <img src={prod.imageUrl} alt={prod.description} width=\"250px\"/>\n          //       </a>\n          //     </Link>\n          //     <h3>{prod.name}</h3>\n          //     <h4>{prod.price} THB</h4>\n          //     {\n          //       user && user.id === prod.user.id ? \n          //       <button className=\"btn-manage\"\n          //         onClick={() => Router.push('/manageProducts')}\n          //       >Manage Products</button> :\n          //       <button className=\"btn-add-carts\"\n          //     >Add To Cart</button>\n          //     }     \n          // </div> \n\n        <div className=\"post-container\">\n        <figure>\n          <Link to={post.link}>\n            <img src={prod.imageUrl} alt={prod.description}/>\n          </Link>\n        </figure>\n        <TagRow tags={post.categories} />\n        <h2>{post.title}</h2>\n        <p className=\"author-text\">\n          <span>\n            By:\n            <Link to={`/author/${post.author}`} >\n              {post.author}\n            </Link>\n          </span>\n          <span>\n            - { post.date }\n          </span>\n        </p>\n\n        <p className=\"description-text\">\n          {post.description}\n        </p>\n        <Link to={post.link}>Read More...</Link>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}