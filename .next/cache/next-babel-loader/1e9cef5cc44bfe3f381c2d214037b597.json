{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import App from 'next/app'\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"../components/Layouts\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport AuthProvider from \"../contexts/AuthProvider\";\nimport apolloClient from \"../apollo/apolloClient\";\nimport cookie from \"cookie\";\nimport { QUERY_USER } from \"../graphql/User\";\nimport \"../styles/global.scss\"; // function MyApp({ Component, pageProps, apollo }) {\n//   return (\n//    <ApolloProvider client={apollo}>\n//       <Layout>\n//         <Component {...pageProps} />\n//       </Layout>\n//    </ApolloProvider>\n//   )\n// }\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps,\n      apollo = _ref.apollo,\n      user = _ref.user;\n  return __jsx(ApolloProvider, {\n    client: apollo\n  }, __jsx(AuthProvider, {\n    userData: user\n  }, __jsx(Layout, null, __jsx(Component, pageProps))));\n}\n\nMyApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var ctx, router, headers, cookies, token, response, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ctx = _ref2.ctx, router = _ref2.router;\n\n            if (!true) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", __NEXT_DATA__.props.pageProps);\n\n          case 3:\n            //console.log('Router -->', router)\n            headers = ctx.req.headers;\n            cookies = headers && cookie.parse(headers.cookie || \"\");\n            token = cookies && cookies.jwtToken;\n\n            if (token) {\n              _context.next = 9;\n              break;\n            }\n\n            if (router.pathname === \"/dashboard\" || router.pathname === \"/carts\" || router.pathname === \"/manage\" || router.pathname === \"/manage/createProduct\" || router.pathname === \"/profile\" || router.pathname === \"/profile/create\" || router.pathname === \"/categories\" || router.pathname === \"/brands\" || router.pathname === \"/brands/createBrand\" || router.pathname === \"/banks\" || router.pathname === \"/banks/CreateBankAc\") {\n              //Use OR To Protected more Routers\n              ctx.res.writeHead(302, {\n                Location: \"/signin\"\n              }); //302 Redirect Route code\n\n              ctx.res.end();\n            } //Add More Protected route here\n\n\n            return _context.abrupt(\"return\", null);\n\n          case 9:\n            _context.next = 11;\n            return fetch(\"http://localhost:5000/graphql\", {\n              method: \"post\",\n              headers: {\n                \"Content-type\": \"application/json\",\n                authorization: \"Bearer \".concat(token) || \"\"\n              },\n              body: JSON.stringify(QUERY_USER)\n            });\n\n          case 11:\n            response = _context.sent;\n\n            if (!response.ok) {\n              _context.next = 19;\n              break;\n            }\n\n            _context.next = 15;\n            return response.json();\n\n          case 15:\n            result = _context.sent;\n            return _context.abrupt(\"return\", {\n              user: result.data.user\n            });\n\n          case 19:\n            if (router.pathname === \"/carts\") {\n              ctx.res.writeHead(302, {\n                Location: '/signin'\n              }); //302 Redirect Route code\n\n              ctx.res.end();\n            } //Add More Protected route here\n\n\n            return _context.abrupt(\"return\", null);\n\n          case 21:\n            console.log(ctx.req.headers);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default apolloClient(MyApp);","map":null,"metadata":{},"sourceType":"module"}