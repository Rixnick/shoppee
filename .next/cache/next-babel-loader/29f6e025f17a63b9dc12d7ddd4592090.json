{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/loki/Desktop/Projects/Shoppin/shop-client/components/ProductDetail.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport Router from 'next/router';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { QUERY_PRODUCT, MY_PRODUCTS } from '../graphql/Products';\nimport { AuthContext } from '../contexts/AuthProvider';\nimport { ADD_TO_CART } from '../graphql/Carts';\nimport '../styles/_product_detail.scss';\n\nfunction Product() {\n  _s();\n\n  var route = useRouter();\n\n  var _useQuery = useQuery(QUERY_PRODUCT, {\n    variables: {\n      id: route.query.productId\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user;\n\n  var _useMutation = useMutation(ADD_TO_CART, {\n    onCompleted: function onCompleted(data) {\n      console.log('data', data);\n    },\n    refetchQueries: [{\n      query: MY_PRODUCTS\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      addToCart = _useMutation2[0];\n\n  var handleAddToCart = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (user) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", Router.push('/signin'));\n\n            case 2:\n              _context.next = 4;\n              return addToCart({\n                variables: {\n                  id: id\n                }\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleAddToCart(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(); //    console.log('result', data)\n\n\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }\n  }, \"Ooops....! Something went wrong, Plz try again later\");\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, \"loading...\");\n  return __jsx(\"div\", {\n    className: \"detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: data.product.imageUrl,\n    alt: data.product.description,\n    width: \"375px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"box-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, data.product.name)), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, data.product.price), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, data.product.description), __jsx(\"button\", {\n    style: {\n      background: 'green',\n      color: 'white',\n      padding: '10px',\n      cursor: 'pointer',\n      border: 'none',\n      borderRadius: '10px'\n    },\n    onClick: function onClick() {\n      return handleAddToCart(data.product.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Add To Cart\")));\n}\n\n_s(Product, \"YGQPhgnm7meH7oJEX4GJUsMJdyU=\", false, function () {\n  return [useRouter, useQuery, useMutation];\n});\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/home/loki/Desktop/Projects/Shoppin/shop-client/components/ProductDetail.jsx"],"names":["React","useContext","useRouter","Router","useQuery","useMutation","QUERY_PRODUCT","MY_PRODUCTS","AuthContext","ADD_TO_CART","Product","route","variables","id","query","productId","data","loading","error","user","onCompleted","console","log","refetchQueries","addToCart","handleAddToCart","push","product","imageUrl","description","name","price","background","color","padding","cursor","border","borderRadius"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAAyB,aAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,qBAA3C;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAO,gCAAP;;AAIA,SAASC,OAAT,GAAmB;AAAA;;AACf,MAAMC,KAAK,GAAGT,SAAS,EAAvB;;AADe,kBAEkBE,QAAQ,CAACE,aAAD,EAAgB;AAAEM,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEF,KAAK,CAACG,KAAN,CAAYC;AAAlB;AAAb,GAAhB,CAF1B;AAAA,MAEPC,IAFO,aAEPA,IAFO;AAAA,MAEDC,OAFC,aAEDA,OAFC;AAAA,MAEQC,KAFR,aAEQA,KAFR;;AAAA,oBAGEjB,UAAU,CAACO,WAAD,CAHZ;AAAA,MAGPW,IAHO,eAGPA,IAHO;;AAAA,qBAMKd,WAAW,CAACI,WAAD,EAAc;AACzCW,IAAAA,WAAW,EAAE,qBAAAJ,IAAI,EAAI;AACjBK,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBN,IAApB;AACH,KAHwC;AAIzCO,IAAAA,cAAc,EAAE,CAAC;AAAET,MAAAA,KAAK,EAAEP;AAAT,KAAD;AAJyB,GAAd,CANhB;AAAA;AAAA,MAMRiB,SANQ;;AAaf,MAAMC,eAAe;AAAA,wEAAG,iBAAOZ,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGfM,IAHe;AAAA;AAAA;AAAA;;AAAA,+CAIThB,MAAM,CAACuB,IAAP,CAAY,SAAZ,CAJS;;AAAA;AAAA;AAAA,qBAMdF,SAAS,CAAC;AAAEZ,gBAAAA,SAAS,EAAE;AAAEC,kBAAAA,EAAE,EAAFA;AAAF;AAAb,eAAD,CANK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAfY,eAAe;AAAA;AAAA;AAAA,KAArB,CAbe,CAsBf;;;AACA,MAAIP,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAAP;AACX,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,SACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAED,IAAI,CAACW,OAAL,CAAaC,QAAvB;AAAiC,IAAA,GAAG,EAAEZ,IAAI,CAACW,OAAL,CAAaE,WAAnD;AAAgE,IAAA,KAAK,EAAC,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKb,IAAI,CAACW,OAAL,CAAaG,IAAlB,CADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOd,IAAI,CAACW,OAAL,CAAaI,KAApB,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIf,IAAI,CAACW,OAAL,CAAaE,WAAjB,CALJ,EAMI;AAAQ,IAAA,KAAK,EAAE;AACXG,MAAAA,UAAU,EAAE,OADD;AAEXC,MAAAA,KAAK,EAAE,OAFI;AAGXC,MAAAA,OAAO,EAAE,MAHE;AAIXC,MAAAA,MAAM,EAAE,SAJG;AAKXC,MAAAA,MAAM,EAAE,MALG;AAMXC,MAAAA,YAAY,EAAE;AANH,KAAf;AAQI,IAAA,OAAO,EAAE;AAAA,aAAMZ,eAAe,CAACT,IAAI,CAACW,OAAL,CAAad,EAAd,CAArB;AAAA,KARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANJ,CAFJ,CADJ;AAsBH;;GA/CQH,O;UACSR,S,EACmBE,Q,EAIbC,W;;;KANfK,O;AAiDT,eAAeA,OAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { useRouter} from 'next/router';\nimport Router from 'next/router';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { QUERY_PRODUCT, MY_PRODUCTS } from '../graphql/Products';\nimport { AuthContext } from '../contexts/AuthProvider';\nimport { ADD_TO_CART } from '../graphql/Carts';\nimport '../styles/_product_detail.scss';\n\n\n\nfunction Product() {\n    const route = useRouter()\n    const { data, loading, error } = useQuery(QUERY_PRODUCT, { variables: { id: route.query.productId } })\n    const { user } = useContext(AuthContext)\n\n\n    const [addToCart] = useMutation(ADD_TO_CART, {\n        onCompleted: data => {\n            console.log('data', data)\n        },\n        refetchQueries: [{ query: MY_PRODUCTS }]\n    })\n\n    const handleAddToCart = async (id ) => {\n       // console.log('product_id:',  id)\n        \n        if (!user) {\n            return Router.push('/signin')\n        }\n        await addToCart({ variables: { id } })\n    }\n\n    //    console.log('result', data)\n    if (error) return <p>Ooops....! Something went wrong, Plz try again later</p>\n    if (loading) return <p>loading...</p>\n    return (\n        <div className=\"detail\">\n            <img src={data.product.imageUrl} alt={data.product.description} width='375px' />\n            <div className=\"box-detail\">\n                <div className=\"row\">\n                    <h3>{data.product.name}</h3>\n                </div>\n                <span>{data.product.price}</span>\n                <p>{data.product.description}</p>\n                <button style={{\n                    background: 'green',\n                    color: 'white',\n                    padding: '10px',\n                    cursor: 'pointer',\n                    border: 'none',\n                    borderRadius: '10px'\n                }}\n                    onClick={() => handleAddToCart(data.product.id)}\n                >Add To Cart</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}