{"ast":null,"code":"var _jsxFileName = \"/home/loki/Desktop/Projects/Shoppin/shop-client/components/Leftbar/Brands.jsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_BRANDS } from '../../graphql/Brands';\n\nclass Brands extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      options,\n      selected: Object.keys(options)[0]\n    });\n\n    _defineProperty(this, \"onChange\", event => {\n      this.setState({\n        selected: event.target.value\n      });\n    });\n  }\n\n  render() {\n    const {\n      data,\n      loading,\n      error\n    } = useQuery(QUERY_BRANDS);\n    console.log(\"Brands: \", data);\n    const {\n      options,\n      selected\n    } = this.state;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, __jsx(\"select\", {\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, Object.keys(options).map(key => __jsx(\"option\", {\n      key: key,\n      value: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, options[key].text))), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, options[selected].description));\n  }\n\n}\n\nexport default Brands;","map":{"version":3,"sources":["/home/loki/Desktop/Projects/Shoppin/shop-client/components/Leftbar/Brands.jsx"],"names":["React","Component","useQuery","QUERY_BRANDS","Brands","options","selected","Object","keys","event","setState","target","value","render","data","loading","error","console","log","state","onChange","map","key","text","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,YAAT,QAA6B,sBAA7B;;AAMA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAAA;AAAA;;AAAA,mCAEnB;AACJI,MAAAA,OADI;AAEJC,MAAAA,QAAQ,EAAEC,MAAM,CAACC,IAAP,CAAYH,OAAZ,EAAqB,CAArB;AAFN,KAFmB;;AAAA,sCAOhBI,KAAK,IAAI;AAChB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAEG,KAAK,CAACE,MAAN,CAAaC;AAAzB,OAAd;AACH,KAT0B;AAAA;;AAW3BC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAA0Bd,QAAQ,CAACC,YAAD,CAAxC;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,IAAxB;AAEA,UAAM;AAAET,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAwB,KAAKa,KAAnC;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,QAAQ,EAAE,KAAKC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCb,MAAM,CAACC,IAAP,CAAYH,OAAZ,EAAqBgB,GAArB,CAAyBC,GAAG,IACzB;AAAQ,MAAA,GAAG,EAAEA,GAAb;AAAkB,MAAA,KAAK,EAAEA,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCjB,OAAO,CAACiB,GAAD,CAAP,CAAaC,IADd,CADH,CADD,CADJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOlB,OAAO,CAACC,QAAD,CAAP,CAAkBkB,WAAzB,CARJ,CADJ;AAYH;;AA5B0B;;AA+B/B,eAAepB,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_BRANDS } from '../../graphql/Brands';\n\n\n\n\n\nclass Brands extends Component {\n\n    state = {\n        options,\n        selected: Object.keys(options)[0]\n    };\n\n    onChange = event => {\n        this.setState({ selected: event.target.value });\n    };\n\n    render() {\n        const { data, loading, error } =useQuery(QUERY_BRANDS)\n        console.log(\"Brands: \", data)\n\n        const { options, selected } = this.state;\n        return (\n            <div>\n                <select onChange={this.onChange}>\n                {Object.keys(options).map(key => (\n                    <option key={key} value={key}>\n                    {options[key].text}\n                    </option>\n                ))}\n                </select>\n                <span>{options[selected].description}</span>\n            </div>\n        )\n    }\n}\n\nexport default Brands\n"]},"metadata":{},"sourceType":"module"}