{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/loki/Desktop/Projects/Shoppin/shop-client/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import App from 'next/app'\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"../components/Layouts\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport AuthProvider from \"../contexts/AuthProvider\";\nimport apolloClient from \"../apollo/apolloClient\";\nimport cookie from \"cookie\";\nimport { QUERY_USER } from \"../graphql/User\";\nimport \"../styles/global.scss\";\nimport \"antd/dist/antd.css\";\nimport '@quasar/extras/ionicons-v4/ionicons-v4.css'; // function MyApp({ Component, pageProps, apollo }) {\n//   return (\n//    <ApolloProvider client={apollo}>\n//       <Layout>\n//         <Component {...pageProps} />\n//       </Layout>\n//    </ApolloProvider>\n//   )\n// }\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps,\n      apollo = _ref.apollo,\n      user = _ref.user;\n  return __jsx(ApolloProvider, {\n    client: apollo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, __jsx(AuthProvider, {\n    userData: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 31\n    }\n  })))));\n}\n\n_c = MyApp;\n\nMyApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var ctx, router, headers, cookies, token, response, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ctx = _ref2.ctx, router = _ref2.router;\n\n            if (!true) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", __NEXT_DATA__.props.pageProps);\n\n          case 3:\n            //console.log('Router -->', router)\n            headers = ctx.req.headers;\n            cookies = headers && cookie.parse(headers.cookie || \"\");\n            token = cookies && cookies.jwtToken;\n\n            if (token) {\n              _context.next = 9;\n              break;\n            }\n\n            if (router.pathname === \"/dashboard\" || router.pathname === \"/carts\" || router.pathname === \"/manage\" || router.pathname === \"/manage/createProduct\" || router.pathname === \"/profile\" || router.pathname === \"/profile/create\" || router.pathname === \"/categories\" || router.pathname === \"/brands\" || router.pathname === \"/brands/createBrand\" || router.pathname === \"/banks\" || router.pathname === \"/banks/CreateBankAc\" || router.pathname === \"/orders\" || router.pathname === \"/orders/createOrder\" || router.pathname === \"/userBrands\" || router.pathname === \"/userProducts\") {\n              //Use OR To Protected more Routers\n              ctx.res.writeHead(302, {\n                Location: \"/signin\"\n              }); //302 Redirect Route code\n\n              ctx.res.end();\n            } //Add More Protected route here\n\n\n            return _context.abrupt(\"return\", null);\n\n          case 9:\n            _context.next = 11;\n            return fetch(\"http://localhost:5000/graphql\", {\n              method: \"post\",\n              headers: {\n                \"Content-type\": \"application/json\",\n                authorization: \"Bearer \".concat(token) || \"\"\n              },\n              body: JSON.stringify(QUERY_USER)\n            });\n\n          case 11:\n            response = _context.sent;\n\n            if (!response.ok) {\n              _context.next = 19;\n              break;\n            }\n\n            _context.next = 15;\n            return response.json();\n\n          case 15:\n            result = _context.sent;\n            return _context.abrupt(\"return\", {\n              user: result.data.user\n            });\n\n          case 19:\n            if (router.pathname === \"/carts\") {\n              ctx.res.writeHead(302, {\n                Location: '/signin'\n              }); //302 Redirect Route code\n\n              ctx.res.end();\n            } //Add More Protected route here\n\n\n            return _context.abrupt(\"return\", null);\n\n          case 21:\n            console.log(ctx.req.headers);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default _c2 = apolloClient(MyApp);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyApp\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/loki/Desktop/Projects/Shoppin/shop-client/pages/_app.js"],"names":["fetch","Layout","ApolloProvider","AuthProvider","apolloClient","cookie","QUERY_USER","MyApp","Component","pageProps","apollo","user","getInitialProps","ctx","router","__NEXT_DATA__","props","headers","req","cookies","parse","token","jwtToken","pathname","res","writeHead","Location","end","method","authorization","body","JSON","stringify","response","ok","json","result","data","console","log"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAO,uBAAP;AACA,OAAO,oBAAP;AACA,OAAO,4CAAP,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,KAAT,OAAuD;AAAA,MAAtCC,SAAsC,QAAtCA,SAAsC;AAAA,MAA3BC,SAA2B,QAA3BA,SAA2B;AAAA,MAAhBC,MAAgB,QAAhBA,MAAgB;AAAA,MAARC,IAAQ,QAARA,IAAQ;AACjD,SACM,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAED,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,MAAC,YAAD;AAAc,IAAA,QAAQ,EAAEC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,MAAC,SAAD,eAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADN,CADN,CADN,CADN;AASL;;KAVQF,K;;AAYTA,KAAK,CAACK,eAAN;AAAA,uEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,SAASA,GAAT,EAAcC,MAAd,SAAcA,MAAd;;AAAA;AAAA;AAAA;AAAA;;AAAA,6CAGLC,aAAa,CAACC,KAAd,CAAoBP,SAHf;;AAAA;AAMlB;AAEQQ,YAAAA,OARU,GAQEJ,GAAG,CAACK,GARN,CAQVD,OARU;AASZE,YAAAA,OATY,GASFF,OAAO,IAAIZ,MAAM,CAACe,KAAP,CAAaH,OAAO,CAACZ,MAAR,IAAkB,EAA/B,CATT;AAUZgB,YAAAA,KAVY,GAUJF,OAAO,IAAIA,OAAO,CAACG,QAVf;;AAAA,gBAYbD,KAZa;AAAA;AAAA;AAAA;;AAaZ,gBACQP,MAAM,CAACS,QAAP,KAAoB,YAApB,IACAT,MAAM,CAACS,QAAP,KAAoB,QADpB,IAEAT,MAAM,CAACS,QAAP,KAAoB,SAFpB,IAGAT,MAAM,CAACS,QAAP,KAAoB,uBAHpB,IAIAT,MAAM,CAACS,QAAP,KAAoB,UAJpB,IAKAT,MAAM,CAACS,QAAP,KAAoB,iBALpB,IAMAT,MAAM,CAACS,QAAP,KAAoB,aANpB,IAOAT,MAAM,CAACS,QAAP,KAAmB,SAPnB,IAQAT,MAAM,CAACS,QAAP,KAAmB,qBARnB,IASAT,MAAM,CAACS,QAAP,KAAoB,QATpB,IAUAT,MAAM,CAACS,QAAP,KAAmB,qBAVnB,IAWAT,MAAM,CAACS,QAAP,KAAoB,SAXpB,IAYAT,MAAM,CAACS,QAAP,KAAoB,qBAZpB,IAaAT,MAAM,CAACS,QAAP,KAAoB,aAbpB,IAcAT,MAAM,CAACS,QAAP,KAAoB,eAf5B,EAgBE;AACI;AACAV,cAAAA,GAAG,CAACW,GAAJ,CAAQC,SAAR,CAAkB,GAAlB,EAAuB;AAAEC,gBAAAA,QAAQ,EAAE;AAAZ,eAAvB,EAFJ,CAEqD;;AACjDb,cAAAA,GAAG,CAACW,GAAJ,CAAQG,GAAR;AACL,aAjCW,CAkCZ;;;AAlCY,6CAmCL,IAnCK;;AAAA;AAAA;AAAA,mBAqCK3B,KAAK,CAAC,+BAAD,EAAkC;AACxD4B,cAAAA,MAAM,EAAE,MADgD;AAExDX,cAAAA,OAAO,EAAE;AACH,gCAAgB,kBADb;AAEHY,gBAAAA,aAAa,EAAE,iBAAUR,KAAV,KAAqB;AAFjC,eAF+C;AAMxDS,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe1B,UAAf;AANkD,aAAlC,CArCV;;AAAA;AAqCZ2B,YAAAA,QArCY;;AAAA,iBA8CdA,QAAQ,CAACC,EA9CK;AAAA;AAAA;AAAA;;AAAA;AAAA,mBA+CSD,QAAQ,CAACE,IAAT,EA/CT;;AAAA;AA+CNC,YAAAA,MA/CM;AAAA,6CAgDL;AAAEzB,cAAAA,IAAI,EAAEyB,MAAM,CAACC,IAAP,CAAY1B;AAApB,aAhDK;;AAAA;AAmDZ,gBAAGG,MAAM,CAACS,QAAP,KAAoB,QAAvB,EAAiC;AAC/BV,cAAAA,GAAG,CAACW,GAAJ,CAAQC,SAAR,CAAkB,GAAlB,EAAuB;AAACC,gBAAAA,QAAQ,EAAE;AAAX,eAAvB,EAD+B,CACe;;AAC9Cb,cAAAA,GAAG,CAACW,GAAJ,CAAQG,GAAR;AACD,aAtDW,CAuDZ;;;AAvDY,6CAwDL,IAxDK;;AAAA;AA0DlBW,YAAAA,OAAO,CAACC,GAAR,CAAY1B,GAAG,CAACK,GAAJ,CAAQD,OAApB;;AA1DkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AA6DA,qBAAeb,YAAY,CAACG,KAAD,CAA3B","sourcesContent":["// import App from 'next/app'\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"../components/Layouts\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport AuthProvider from \"../contexts/AuthProvider\";\nimport apolloClient from \"../apollo/apolloClient\";\nimport cookie from \"cookie\";\nimport { QUERY_USER } from \"../graphql/User\";\nimport \"../styles/global.scss\";\nimport \"antd/dist/antd.css\";\nimport '@quasar/extras/ionicons-v4/ionicons-v4.css';\n\n\n// function MyApp({ Component, pageProps, apollo }) {\n//   return (\n//    <ApolloProvider client={apollo}>\n//       <Layout>\n//         <Component {...pageProps} />\n//       </Layout>\n//    </ApolloProvider>\n//   )\n// }\n\nfunction MyApp({ Component, pageProps, apollo, user }) {\n      return (\n            <ApolloProvider client={apollo}>\n                  <AuthProvider userData={user}>\n                        <Layout>\n                              <Component {...pageProps} />\n                        </Layout>\n                  </AuthProvider>\n            </ApolloProvider>\n      );\n}\n\nMyApp.getInitialProps = async ({ ctx, router }) => {\n      // calls page's `getInitialProps` and fills `appProps.pageProps`\n      if (process.browser) {\n            return __NEXT_DATA__.props.pageProps;\n      }\n\n      //console.log('Router -->', router)\n\n      const { headers } = ctx.req;\n      const cookies = headers && cookie.parse(headers.cookie || \"\");\n      const token = cookies && cookies.jwtToken;\n\n      if (!token) {\n            if (\n                    router.pathname === \"/dashboard\" ||\n                    router.pathname === \"/carts\" ||\n                    router.pathname === \"/manage\" ||\n                    router.pathname === \"/manage/createProduct\"||\n                    router.pathname === \"/profile\"||\n                    router.pathname === \"/profile/create\" ||\n                    router.pathname === \"/categories\" ||\n                    router.pathname ===\"/brands\" ||\n                    router.pathname ===\"/brands/createBrand\" ||\n                    router.pathname === \"/banks\" ||\n                    router.pathname ===\"/banks/CreateBankAc\" ||\n                    router.pathname === \"/orders\" ||\n                    router.pathname === \"/orders/createOrder\"||\n                    router.pathname === \"/userBrands\" ||\n                    router.pathname === \"/userProducts\"\n            ) {\n                  //Use OR To Protected more Routers\n                  ctx.res.writeHead(302, { Location: \"/signin\" }); //302 Redirect Route code\n                  ctx.res.end();\n            }\n            //Add More Protected route here\n            return null;\n      }\n      const response = await fetch(\"http://localhost:5000/graphql\", {\n            method: \"post\",\n            headers: {\n                  \"Content-type\": \"application/json\",\n                  authorization: `Bearer ${token}` || \"\",\n            },\n            body: JSON.stringify(QUERY_USER),\n      });\n      //console.log(\"response data:\", response);\n      if (response.ok) {\n            const result = await response.json();\n            return { user: result.data.user };\n            //console.log('User Info -->',  result)\n      } else {\n            if(router.pathname === \"/carts\") {\n              ctx.res.writeHead(302, {Location: '/signin'}) //302 Redirect Route code\n              ctx.res.end()\n            }\n            //Add More Protected route here\n            return null;\n      }\n      console.log(ctx.req.headers)\n};\n\nexport default apolloClient(MyApp);\n"]},"metadata":{},"sourceType":"module"}