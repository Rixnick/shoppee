{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Router, { useRouter } from 'next/router';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { QUERY_PRODUCT, MY_PRODUCTS } from '../graphql/Products';\nimport { AuthContext } from '../contexts/AuthProvider';\nimport { ADD_TO_CART } from '../graphql/Carts';\n\nfunction Product() {\n  const route = useRouter();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(QUERY_PRODUCT, {\n    variables: {\n      id: route.query.productId\n    }\n  });\n  console.log('ProductID:', route.query.productId);\n  const {\n    user\n  } = useContext(AuthContext);\n  const [addToCart] = useMutation(ADD_TO_CART, {\n    onCompleted: data => {\n      console.log('data', data);\n    },\n    refetchQueries: [{\n      query: MY_PRODUCTS\n    }]\n  });\n\n  const handleAddToCart = async id => {\n    // console.log('product_id:',  id)\n    if (!user) {\n      return Router.push('/signin');\n    }\n\n    await addToCart({\n      variables: {\n        id\n      }\n    });\n  }; //    console.log('result', data)\n\n\n  if (error) return __jsx(\"p\", null, \"Ooops....! Something went wrong, Plz try again later\");\n  if (loading) return __jsx(\"p\", null, \"loading...\");\n  return __jsx(\"div\", {\n    className: \"detail\"\n  }, __jsx(\"img\", {\n    src: data.product.imageUrl,\n    alt: data.product.description,\n    width: \"375px\"\n  }), __jsx(\"div\", {\n    className: \"box-detail\"\n  }, __jsx(\"div\", {\n    className: \"box-head\"\n  }, __jsx(\"h3\", null, data.product.name), __jsx(\"span\", null, \"Price: $\", data.product.price)), __jsx(\"p\", null, data.product.description), __jsx(\"div\", {\n    className: \"box-footer\"\n  }, __jsx(\"button\", {\n    className: \"btn-cart\",\n    onClick: () => handleAddToCart(data.product.id)\n  }, \"Add To Cart\"))));\n}\n\nexport default Product;","map":null,"metadata":{},"sourceType":"module"}