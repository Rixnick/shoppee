{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { MY_CARTS } from '../../graphql/Carts';\nimport CartItem from './CartItem';\n\nconst Carts = () => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(MY_CARTS); //\n  // console.log(\"User Cart:\", data)\n\n  if (error) return __jsx(React.Fragment, null, __jsx(\"main\", null, __jsx(\"div\", {\n    className: \"cart__content\"\n  }, __jsx(\"p\", {\n    className: \"error__card\"\n  }, \"Ooops....! Something went wrong, Plz Login try again later\"))));\n  if (loading) return __jsx(\"p\", null, \"Empty Cart Loading...\");\n  return __jsx(React.Fragment, null, __jsx(\"main\", null, __jsx(\"div\", {\n    className: \"cart__content\"\n  }, __jsx(\"h2\", {\n    className: \"dash-title\"\n  }, \"Cart Over Views\"), __jsx(\"div\", {\n    className: \"table-responsive\"\n  }, __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Image\"), __jsx(\"th\", null, \"Products Name\"), __jsx(\"th\", null, \"Price\"), __jsx(\"th\", null, \"Qty\"), __jsx(\"th\", null, \"Total Anount\"), __jsx(\"th\", null, \"Actions\"))), __jsx(\"tbody\", null, data.user.carts.map(cart => __jsx(CartItem, {\n    key: cart.id,\n    cart: cart\n  }))), __jsx(\"tfoot\", null, __jsx(\"tr\", null, __jsx(\"th\", null), __jsx(\"th\", null), __jsx(\"th\", null), __jsx(\"th\", null, \"Total:\"), __jsx(\"th\", null, \"$\", data.user.carts.length > 0 && data.user.carts.reduce((sum, cart) => sum + cart.qualtity * cart.product.price, 0)), __jsx(\"th\", null, __jsx(\"a\", {\n    href: \"/checkOut\"\n  }, \"Check Out\")))))))));\n};\n\nexport default Carts;","map":null,"metadata":{},"sourceType":"module"}