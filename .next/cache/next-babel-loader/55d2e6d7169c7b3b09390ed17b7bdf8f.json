{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { SIGN_UP } from '../graphql/User';\nimport Link from 'next/link';\n\nvar Signup = function Signup() {\n  var _useState = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  }),\n      userInfo = _useState[0],\n      setUserInfo = _useState[1];\n\n  var handleChange = function handleChange(e) {\n    setUserInfo(_objectSpread(_objectSpread({}, userInfo), {}, _defineProperty({}, e.target.name, e.target.value)));\n  }; // console.log(userInfo)\n\n\n  var _useState2 = useState(false),\n      success = _useState2[0],\n      setSuccess = _useState2[1];\n\n  var _useMutation = useMutation(SIGN_UP, {\n    variables: _objectSpread({}, userInfo),\n    onCompleted: function onCompleted(data) {\n      if (data) {\n        setSuccess(true);\n        setUserInfo({\n          username: \"\",\n          email: \"\",\n          password: \"\"\n        });\n      }\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      signup = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              e.preventDefault();\n              _context.next = 4;\n              return signup();\n\n            case 4:\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 6]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"signup-page\"\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"h3\", null, \"Sign Up Form\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"Enter Username\",\n    value: userInfo.username,\n    onChange: handleChange\n  }), __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Enter Email\",\n    value: userInfo.email,\n    onChange: handleChange\n  }), __jsx(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Enter Password\",\n    value: userInfo.password,\n    onChange: handleChange\n  }), __jsx(\"div\", {\n    className: \"message\"\n  }, success && __jsx(\"p\", {\n    style: {\n      color: 'teal'\n    }\n  }, \"You Successfully Signed Up, Please\", \" \", __jsx(Link, {\n    href: \"/signin\"\n  }, __jsx(\"a\", null, __jsx(\"span\", null, \"Login here\")))), error && __jsx(\"p\", null, error.graphQLErrors[0].message)), __jsx(\"button\", {\n    className: \"btn-submit\",\n    type: \"submit\",\n    disabled: loading\n  }, \"Submit Now!\"), __jsx(Link, {\n    href: \"/signin\"\n  }, __jsx(\"a\", null, \"Already have an account? \", \"  \", \" \", __jsx(\"span\", null, \"Login here\")))));\n};\n\nexport default Signup;","map":null,"metadata":{},"sourceType":"module"}