{"ast":null,"code":"var _jsxFileName = \"/home/loki/Desktop/Projects/Shoppin/shop-client/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// import App from 'next/app'\nimport Layout from '../components/Layouts';\nimport AuthProvider from '../contexts/AuthProvider';\nimport { ApolloClient } from 'apollo-client';\nimport { ApolloProvider } from '@apollo/react-hooks'; // function MyApp({ Component, pageProps, apollo }) {\n//   return (\n//    <ApolloProvider client={apollo}>\n//       <Layout>\n//         <Component {...pageProps} />\n//       </Layout>\n//    </ApolloProvider>\n//   )\n// }\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return __jsx(ApolloProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(AuthProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 8\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  })))));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n\n\nMyApp.getInitialProps = async appContext => {\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await App.getInitialProps(appContext);\n  return _objectSpread({}, appProps);\n};\n\nexport default MyApp;","map":{"version":3,"sources":["/home/loki/Desktop/Projects/Shoppin/shop-client/pages/_app.js"],"names":["Layout","AuthProvider","ApolloClient","ApolloProvider","MyApp","Component","pageProps","getInitialProps","appContext","appProps","App"],"mappings":";;;;;;;;;;;;AAAA;AACA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,SAAQC,cAAR,QAA6B,qBAA7B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAwC;AACtC,SACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADD,CADH,CADF;AASD,C,CACD;AACA;AACA;AACA;AACA;;;AACAF,KAAK,CAACG,eAAN,GAAwB,MAAOC,UAAP,IAAsB;AAC5C;AACA,QAAMC,QAAQ,GAAG,MAAMC,GAAG,CAACH,eAAJ,CAAoBC,UAApB,CAAvB;AAEA,2BAAYC,QAAZ;AACD,CALD;;AAOA,eAAeL,KAAf","sourcesContent":["// import App from 'next/app'\nimport Layout from '../components/Layouts';\nimport AuthProvider from '../contexts/AuthProvider';\nimport {ApolloClient} from 'apollo-client';\nimport {ApolloProvider} from '@apollo/react-hooks';\n\n// function MyApp({ Component, pageProps, apollo }) {\n//   return (\n//    <ApolloProvider client={apollo}>\n//       <Layout>\n//         <Component {...pageProps} />\n//       </Layout>\n//    </ApolloProvider>\n//   )\n// }\n\n\n\nfunction MyApp({ Component, pageProps}) {\n  return (\n    <ApolloProvider>\n       <AuthProvider>\n        <Layout>\n          <Component {...pageProps} />\n        </Layout>\n      </AuthProvider>\n    </ApolloProvider>\n  )\n}\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\nMyApp.getInitialProps = async (appContext) => {\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await App.getInitialProps(appContext);\n\n  return { ...appProps }\n}\n\nexport default MyApp"]},"metadata":{},"sourceType":"module"}