{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n// import App from 'next/app'\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"../components/Layouts\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport AuthProvider from \"../contexts/AuthProvider\";\nimport apolloClient from \"../apollo/apolloClient\";\nimport cookie from \"cookie\";\nimport { QUERY_USER } from \"../graphql/User\";\nimport \"../styles/global.scss\";\nimport \"antd/dist/antd.css\";\nimport '@quasar/extras/ionicons-v4/ionicons-v4.css'; //const Backend_uri = process.env.BACKEND_URI\n// function MyApp({ Component, pageProps, apollo }) {\n//   return (\n//    <ApolloProvider client={apollo}>\n//       <Layout>\n//         <Component {...pageProps} />\n//       </Layout>\n//    </ApolloProvider>\n//   )\n// }\n\nfunction App({\n  Component,\n  pageProps,\n  apollo,\n  user\n}) {\n  return __jsx(ApolloProvider, {\n    client: apollo\n  }, __jsx(AuthProvider, {\n    userData: user\n  }, __jsx(Layout, null, __jsx(Component, pageProps))));\n}\n\nApp.getInitialProps = async ({\n  ctx,\n  router\n}) => {\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\n  if (false) {\n    return __NEXT_DATA__.props.pageProps;\n  } //console.log('Router -->', router)\n\n\n  const {\n    headers\n  } = ctx.req;\n  const cookies = headers && cookie.parse(headers.cookie || \"\");\n  const token = cookies && cookies.jwtToken;\n\n  if (!token) {\n    if (router.pathname === \"/dashboard\" || router.pathname === \"/userCart\" || router.pathname === \"/userBrands\" || router.pathname === \"/userCategories\" || router.pathname === \"/userProducts\" || router.pathname === \"/userProducts/createProduct\" || router.pathname === \"/userProfile\" || router.pathname === \"/userCustOrder\" || router.pathname === \"/checkOut\" || router.pathname === \"/userBank\") {\n      //Use OR To Protected more Routers\n      ctx.res.writeHead(302, {\n        Location: \"/signin\"\n      }); //302 Redirect Route code\n\n      ctx.res.end();\n    } //Add More Protected route here\n\n\n    return null;\n  } //\"http://localhost:5000/graphql\"\n\n\n  const response = await fetch(\"http://localhost:5000/graphql\", {\n    method: \"post\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      authorization: `Bearer ${token}` || \"\"\n    },\n    body: JSON.stringify(QUERY_USER)\n  }); //console.log(\"response data:\", response);\n\n  if (response.ok) {\n    const result = await response.json();\n    return {\n      user: result.data.user\n    }; //console.log('User Info -->',  result)\n  } else {\n    if (router.pathname === \"/carts\") {\n      ctx.res.writeHead(302, {\n        Location: '/signin'\n      }); //302 Redirect Route code\n\n      ctx.res.end();\n    } //Add More Protected route here\n\n\n    return null;\n  } //console.log(ctx.req.headers)\n\n};\n\nexport default apolloClient(App);","map":null,"metadata":{},"sourceType":"module"}