{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/home/loki/Desktop/Projects/Shoppin/shop-client/pages/products/[productId].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query QUERY_PRODUCT($id: ID!) {\\n  product(id: $id){\\n    id\\n    name\\n    description\\n    imageUrl\\n    price\\n    createdAt\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag'; //import apollo Client\n\nimport apolloClient from '../../apollo/apolloClient';\nvar QUERY_PRODUCT = gql(_templateObject());\n\nfunction Product() {\n  _s();\n\n  var route = useRouter();\n\n  var _useQuery = useQuery(QUERY_PRODUCT, {\n    variables: {\n      id: route.query.productId\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error; // console.log('result', result)\n\n\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 20\n    }\n  }, \"Ooops....! Something went wrong, Plz try again later\");\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 22\n    }\n  }, \"loading...\");\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: data.product.imageUrl,\n    alt: data.product.description,\n    width: \"375px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, data.product.name), __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, data.product.price), __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, data.product.description));\n}\n\n_s(Product, \"ctRjQEQmklSKwEXStk+QdSQWI2k=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = Product;\nexport default _c2 = apolloClient(Product);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Product\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/loki/Desktop/Projects/Shoppin/shop-client/pages/products/[productId].js"],"names":["React","useRouter","useQuery","gql","apolloClient","QUERY_PRODUCT","Product","route","variables","id","query","productId","data","loading","error","display","flexDirection","product","imageUrl","description","name","price"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAGA,IAAMC,aAAa,GAAGF,GAAH,mBAAnB;;AAYA,SAASG,OAAT,GAAmB;AAAA;;AACjB,MAAMC,KAAK,GAAGN,SAAS,EAAvB;;AADiB,kBAEcC,QAAQ,CAACG,aAAD,EAAgB;AAACG,IAAAA,SAAS,EAAE;AAACC,MAAAA,EAAE,EAAEF,KAAK,CAACG,KAAN,CAAYC;AAAjB;AAAZ,GAAhB,CAFtB;AAAA,MAEVC,IAFU,aAEVA,IAFU;AAAA,MAEJC,OAFI,aAEJA,OAFI;AAAA,MAEKC,KAFL,aAEKA,KAFL,EAGjB;;;AACA,MAAGA,KAAH,EAAU,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAAP;AACV,MAAGD,OAAH,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACZ,SACE;AACE,IAAA,KAAK,EAAE;AACLE,MAAAA,OAAO,EAAC,MADH;AAELC,MAAAA,aAAa,EAAC;AAFT,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,GAAG,EAAEJ,IAAI,CAACK,OAAL,CAAaC,QAAvB;AAAiC,IAAA,GAAG,EAAEN,IAAI,CAACK,OAAL,CAAaE,WAAnD;AAAgE,IAAA,KAAK,EAAC,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,IAAI,CAACK,OAAL,CAAaG,IAAlB,CAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,IAAI,CAACK,OAAL,CAAaI,KAAlB,CARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,IAAI,CAACK,OAAL,CAAaE,WAAlB,CATF,CADF;AAaD;;GAnBQb,O;UACOL,S,EACiBC,Q;;;KAFxBI,O;AAqBT,qBAAeF,YAAY,CAACE,OAAD,CAA3B","sourcesContent":["import React from 'react';\nimport {useRouter} from 'next/router';\nimport {useQuery} from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n//import apollo Client\nimport apolloClient from '../../apollo/apolloClient';\n\n\nconst QUERY_PRODUCT = gql`\n  query QUERY_PRODUCT($id: ID!) {\n  product(id: $id){\n    id\n    name\n    description\n    imageUrl\n    price\n    createdAt\n  }\n}\n`\nfunction Product() {\n  const route = useRouter()\n  const {data, loading, error} = useQuery(QUERY_PRODUCT, {variables: {id: route.query.productId}})\n  // console.log('result', result)\n  if(error) return <p>Ooops....! Something went wrong, Plz try again later</p>\n  if(loading) return <p>loading...</p>\n  return (\n    <div\n      style={{\n        display:'flex',\n        flexDirection:'column'\n      }}\n    >\n      <img src={data.product.imageUrl} alt={data.product.description} width='375px' />\n      <h3>{data.product.name}</h3>\n      <h5>{data.product.price}</h5>\n      <h5>{data.product.description}</h5>\n    </div>\n  )\n}\n\nexport default apolloClient(Product)\n"]},"metadata":{},"sourceType":"module"}