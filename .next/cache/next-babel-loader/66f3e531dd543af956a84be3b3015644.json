{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport BankAcList from './BankAcList';\nimport Backdrop from '../Backdrop';\nimport Modal from '../Modal';\nimport CreateBankAc from './CreateBankAc';\n\nvar UserBankAcc = /*#__PURE__*/function (_Component) {\n  _inherits(UserBankAcc, _Component);\n\n  var _super = _createSuper(UserBankAcc);\n\n  function UserBankAcc() {\n    var _this;\n\n    _classCallCheck(this, UserBankAcc);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      creating: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"CreateEventHandler\", function () {\n      _this.setState({\n        creating: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"modalConfirmHandler\", function () {\n      _this.setState({\n        creating: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"modalCancelHandler\", function () {\n      _this.setState({\n        creating: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(UserBankAcc, [{\n    key: \"render\",\n    // _renderCreateBankAccount = () => () => {\n    //     return(\n    //         <div className=\"creat-bank__account__card\">\n    //             <form action=\"\">\n    //                 <div className=\"form-control\">\n    //                     <label htmlFor=\"bank__name\">Bank Name</label>\n    //                     <input type=\"text\" name=\"bankName\" id=\"bankName\" placeholder=\"Bank Name\"/>\n    //                 </div>\n    //                 <div className=\"form-control\">\n    //                     <label htmlFor=\"bank__name\">Account Name</label>\n    //                     <input type=\"text\" name=\"acName\" id=\"acName\" placeholder=\"Bank Name\"/>\n    //                 </div>\n    //                 <div className=\"form-control\">\n    //                     <label htmlFor=\"bank__name\">Account No</label>\n    //                     <input type=\"text\" name=\"acNo\" id=\"acNo\" placeholder=\"Bank Name\"/>\n    //                 </div>\n    //                 <div className=\"form-control\">\n    //                     <label htmlFor=\"bank__name\">Account Remark</label>\n    //                     <textarea type=\"text\" name=\"acNo\" id=\"acNo\" placeholder=\"Bank Name\" rows=\"4\"></textarea>\n    //                 </div>\n    //                 <div className=\"form-control\">\n    //                     <label htmlFor=\"bank__name\">Bank Logo</label>\n    //                     <input type=\"text\" name=\"bankLogo\" id=\"bankLogo\" placeholder=\"Bank Name\"/>\n    //                 </div>\n    //                 <div className=\"form-control\">\n    //                     <label htmlFor=\"bank__name\">My QR-Code</label>\n    //                     <input type=\"text\" name=\"qrcode\" id=\"qrcode\" placeholder=\"Bank Name\"/>\n    //                 </div>\n    //                 <div className=\"form-submit\">\n    //                     <button className=\"btn__cancel\">Cancel</button>\n    //                     <button className=\"btn__submit\">Submit</button>\n    //                 </div>\n    //             </form>\n    //         </div>\n    //     )\n    // }\n    value: function render() {\n      // const CreateBankAccount = this._renderCreateBankAccount();\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"bank_card__head\"\n      }, __jsx(\"h2\", {\n        className: \"dash-title\"\n      }, \"My Bank Account\"), __jsx(\"a\", {\n        onClick: this.CreateEventHandler\n      }, __jsx(\"span\", {\n        className: \"ti-plus\"\n      }), __jsx(\"small\", null, \"Add Account\"))), this.state.creating && __jsx(Backdrop, null), this.state.creating && __jsx(Modal, {\n        title: \"Create Bank Account No\",\n        canCancel: true,\n        canConfirm: true,\n        onCancel: this.modalCancelHandler,\n        onConfirm: this.modalConfirmHandler\n      }, __jsx(CreateBankAc, null)), __jsx(BankAcList, null));\n    }\n  }]);\n\n  return UserBankAcc;\n}(Component);\n\nexport default UserBankAcc;","map":null,"metadata":{},"sourceType":"module"}