{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/loki/Desktop/Projects/Shoppin/shop-client/components/Leftbar/Brands.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_BRANDS } from '../../graphql/Brands';\n\nvar Brands = function Brands() {\n  _s();\n\n  var _useQuery = useQuery(QUERY_BRANDS),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error; // console.log(\"Brands: \", data)\n\n\n  if (error) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 23\n    }\n  }, \"Ooops....! Something went wrong, Plz try again later\");\n  if (loading) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 25\n    }\n  }, \"loading...\");\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, __jsx(\"select\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, __jsx(\"option\", {\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"Select Brands\"), data.brands.map(function (brand) {\n    return __jsx(\"option\", {\n      key: brand.id,\n      value: brand.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 29\n      }\n    }, brand.name);\n  })));\n};\n\n_s(Brands, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = Brands;\nexport default Brands;\n\nvar _c;\n\n$RefreshReg$(_c, \"Brands\");","map":{"version":3,"sources":["/home/loki/Desktop/Projects/Shoppin/shop-client/components/Leftbar/Brands.jsx"],"names":["React","useQuery","QUERY_BRANDS","Brands","data","loading","error","brands","map","brand","id","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,YAAT,QAA6B,sBAA7B;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AAAA,kBACgBF,QAAQ,CAACC,YAAD,CADxB;AAAA,MACTE,IADS,aACTA,IADS;AAAA,MACHC,OADG,aACHA,OADG;AAAA,MACMC,KADN,aACMA,KADN,EAEjB;;;AAEA,MAAIA,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAAP;AACX,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAQ,IAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,EAGQD,IAAI,CAACG,MAAL,CAAYC,GAAZ,CAAgB,UAAAC,KAAK;AAAA,WACb;AAAQ,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAnB;AAAuB,MAAA,KAAK,EAAED,KAAK,CAACC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCD,KAAK,CAACE,IAA/C,CADa;AAAA,GAArB,CAHR,CADJ,CADJ;AAYH,CAlBD;;GAAMR,M;UAC+BF,Q;;;KAD/BE,M;AAoBN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_BRANDS } from '../../graphql/Brands';\n\n\nconst Brands = () => {\n    const { data, loading, error } = useQuery(QUERY_BRANDS)\n    // console.log(\"Brands: \", data)\n\n    if (error) return <p>Ooops....! Something went wrong, Plz try again later</p>\n    if (loading) return <p>loading...</p>\n    return (\n        <div>\n            <select>\n            <option disabled>Select Brands</option>\n                {\n                    data.brands.map(brand => (                            \n                            <option key={brand.id} value={brand.id}>{brand.name}</option>\n                    ))\n                }\n            </select>\n        </div>\n    )\n}\n\nexport default Brands;\n"]},"metadata":{},"sourceType":"module"}