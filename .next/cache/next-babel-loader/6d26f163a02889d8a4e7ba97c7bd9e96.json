{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { SIGN_UP } from '../graphql/User';\nimport Link from 'next/link';\n\nconst Signup = () => {\n  const {\n    0: userInfo,\n    1: setUserInfo\n  } = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleChange = e => {\n    setUserInfo(_objectSpread(_objectSpread({}, userInfo), {}, {\n      [e.target.name]: e.target.value //Target Name and Value\n\n    }));\n  }; // console.log(userInfo)\n\n\n  const {\n    0: success,\n    1: setSuccess\n  } = useState(false);\n  const [signup, {\n    loading,\n    error\n  }] = useMutation(SIGN_UP, {\n    variables: _objectSpread({}, userInfo),\n    onCompleted: data => {\n      if (data) {\n        setSuccess(true);\n        setUserInfo({\n          username: \"\",\n          email: \"\",\n          password: \"\"\n        });\n      }\n    }\n  });\n\n  const handleSubmit = async e => {\n    try {\n      e.preventDefault();\n      await signup();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      margin: '100px'\n    }\n  }, __jsx(\"form\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      margin: 'auto',\n      width: '45%'\n    },\n    onSubmit: handleSubmit\n  }, __jsx(\"h3\", null, \"Sign Up Form\"), __jsx(\"input\", {\n    style: {\n      margin: '5px',\n      height: '30px'\n    },\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"Enter Username\",\n    value: userInfo.username,\n    onChange: handleChange\n  }), __jsx(\"input\", {\n    style: {\n      margin: '5px',\n      height: '30px'\n    },\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Enter Email\",\n    value: userInfo.email,\n    onChange: handleChange\n  }), __jsx(\"input\", {\n    style: {\n      margin: '5px',\n      height: '30px'\n    },\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Enter Password\",\n    value: userInfo.password,\n    onChange: handleChange\n  }), __jsx(\"div\", null, success && __jsx(\"p\", null, \"You Successfully Signed Up, Please\", \" \", __jsx(Link, {\n    href: \"/signin\"\n  }, __jsx(\"a\", null, \"Signin\"))), error && __jsx(\"p\", {\n    style: {\n      color: 'red'\n    }\n  }, error.graphQLErrors[0].message)), __jsx(\"button\", {\n    style: {\n      margin: '5px',\n      padding: '10px',\n      background: 'teal',\n      color: 'white',\n      border: 'none',\n      cursor: 'pointer',\n      fontSize: '18px'\n    },\n    type: \"submit\",\n    disabled: loading\n  }, \"Submit\"), __jsx(Link, {\n    href: \"/signin\"\n  }, __jsx(\"a\", null, \"Already have an account? Login here\"))));\n};\n\nexport default Signup;","map":null,"metadata":{},"sourceType":"module"}