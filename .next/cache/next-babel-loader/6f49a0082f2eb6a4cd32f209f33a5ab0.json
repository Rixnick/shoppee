{"ast":null,"code":"var _jsxFileName = \"/home/loki/Desktop/Projects/Shoppin/shop-client/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// import App from 'next/app'\nimport Layout from '../components/Layouts';\nimport AuthProvider from '../contexts/AuthProvider';\nimport apolloClient from '../apollo/apolloClient'; // function MyApp({ Component, pageProps, apollo }) {\n//   return (\n//    <ApolloProvider client={apollo}>\n//       <Layout>\n//         <Component {...pageProps} />\n//       </Layout>\n//    </ApolloProvider>\n//   )\n// }\n\nfunction MyApp({\n  Component,\n  pageProps,\n  apollo\n}) {\n  return __jsx(AuthProvider, {\n    client: apollo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }))));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n\n\nMyApp.getInitialProps = async ({\n  ctx\n}) => {// calls page's `getInitialProps` and fills `appProps.pageProps`\n};\n\nexport default apolloClient(MyApp);","map":{"version":3,"sources":["/home/loki/Desktop/Projects/Shoppin/shop-client/pages/_app.js"],"names":["Layout","AuthProvider","apolloClient","MyApp","Component","pageProps","apollo","getInitialProps","ctx"],"mappings":";;;;;;AAAA;AACA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,YAAP,MAAyB,wBAAzB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAf,EAAgD;AAC9C,SACE,MAAC,YAAD;AAAc,IAAA,MAAM,EAAEA,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CADF;AAOD,C,CACD;AACA;AACA;AACA;AACA;;;AACAF,KAAK,CAACI,eAAN,GAAwB,OAAO;AAACC,EAAAA;AAAD,CAAP,KAAiB,CACvC;AAED,CAHD;;AAKA,eAAeN,YAAY,CAACC,KAAD,CAA3B","sourcesContent":["// import App from 'next/app'\nimport Layout from '../components/Layouts';\nimport AuthProvider from '../contexts/AuthProvider';\nimport apolloClient from '../apollo/apolloClient';\n// function MyApp({ Component, pageProps, apollo }) {\n//   return (\n//    <ApolloProvider client={apollo}>\n//       <Layout>\n//         <Component {...pageProps} />\n//       </Layout>\n//    </ApolloProvider>\n//   )\n// }\n\n\n\nfunction MyApp({ Component, pageProps, apollo}) {\n  return (\n    <AuthProvider client={apollo}>\n      <Layout>\n        <Component {...pageProps} />\n      </Layout>\n    </AuthProvider>\n  )\n}\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\nMyApp.getInitialProps = async ({ctx}) => {\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\n  \n}\n\nexport default apolloClient(MyApp)"]},"metadata":{},"sourceType":"module"}