{"ast":null,"code":"var _jsxFileName = \"/home/loki/Desktop/Projects/Shoppin/shop-client/components/UserProduct/index.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, useState } from 'react';\nimport ProductList from './ProductList';\nimport Backdrop from '../Backdrop';\nimport Modal from '../Modal';\nimport CreateProduct from './CreateProduct';\nimport { useMutation } from '@apollo/react-hooks';\nimport fetch from 'isomorphic-unfetch';\nimport Router from 'next/router';\nimport { QUERY_PRODUCTS, CREATE_PRODUCT, UPDATE_PRODUCT, MY_PRODUCTS } from '../../graphql/Products';\n\nclass UserProduct extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      creating: false\n    });\n\n    _defineProperty(this, \"CreateEventHandler\", () => {\n      this.setState({\n        creating: true\n      });\n    });\n\n    _defineProperty(this, \"modalConfirmHandler\", () => {\n      this.setState({\n        creating: false\n      });\n      this.name = this.nameElRef.current.value;\n      this.description = this.descriptionElRef.current.value;\n      this.price = this.priceElRef.current.value;\n      this.imageUrl = this.imageUrlElRef.current.value;\n      const event = {\n        name,\n        description,\n        price,\n        imageUrl\n      };\n    });\n\n    _defineProperty(this, \"modalCancelHandler\", () => {\n      this.setState({\n        creating: false\n      });\n    });\n\n    _defineProperty(this, \"_renderCreateProduct\", () => () => {\n      const {\n        0: edit,\n        1: setEdit\n      } = useState(false);\n      const {\n        0: file,\n        1: setFile\n      } = useState(null);\n      const {\n        0: productData,\n        1: setProductData\n      } = useState({\n        name: '',\n        description: '',\n        price: '',\n        imageUrl: ''\n      });\n      const [createProduct, {\n        loading,\n        error\n      }] = useMutation(CREATE_PRODUCT, {\n        refetchQueries: [{\n          query: QUERY_PRODUCTS\n        }]\n      });\n\n      const handleChange = e => setProductData(_objectSpread(_objectSpread({}, productData), {}, {\n        [e.target.name]: e.target.value\n      }));\n\n      const selectFile = e => {\n        const files = e.target.files;\n        setFile(files[0]); //console.log(files)\n      }; //Upload File to Cloudinary\n\n\n      const uploadFile = async () => {\n        const data = new FormData();\n        data.append('file', file);\n        data.append('upload_preset', 'shoppin');\n        const res = await fetch('https://api.cloudinary.com/v1_1/swizce/image/upload', {\n          method: 'post',\n          body: data\n        });\n        const result = await res.json(); //console.log('image result',  result)\n\n        return result.secure_url;\n      };\n\n      const handleSubmit = async e => {\n        try {\n          e.preventDefault();\n          const url = await uploadFile(); // console.log('image Url:', url)\n\n          if (url) {\n            const result = await createProduct({\n              variables: _objectSpread(_objectSpread({}, productData), {}, {\n                price: +productData.price,\n                imageUrl: url\n              })\n            }); //console.log('Product Data:', result)\n\n            return result;\n          }\n\n          Router.push('/userProducts');\n        } catch (error) {\n          console.log(error);\n        }\n      };\n\n      return __jsx(\"div\", {\n        className: \"create-product-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"create-product_tabs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }, __jsx(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }, \"create More tabs here\"), __jsx(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, __jsx(\"a\", {\n        href: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }\n      }, \"Product Basic Info\")), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }\n      }, __jsx(\"a\", {\n        href: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }\n      }, \"Product Image Gallary\")), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      }, __jsx(\"a\", {\n        href: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }\n      }, \"Product Promotion\")), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }\n      }, __jsx(\"a\", {\n        href: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }\n      }, \"Product Slug detail\")), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      }, __jsx(\"a\", {\n        href: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }\n      }, \"Product Release QR-Code\")))), __jsx(\"div\", {\n        className: \"create-product_form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }, __jsx(\"form\", {\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"info-state\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }\n      }, !edit ? __jsx(React.Fragment, null, __jsx(\"label\", {\n        htmlFor: \"productname\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 37\n        }\n      }, \"Product Name:\"), __jsx(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Enter Product Name\",\n        value: productData.name,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 37\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 37\n        }\n      }, \"Product Desc:\"), __jsx(\"textarea\", {\n        type: \"text\",\n        name: \"description\",\n        placeholder: \"Product Description\",\n        value: productData.description,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 37\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"city\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 37\n        }\n      }, \"Price:\"), __jsx(\"input\", {\n        type: \"number\",\n        name: \"price\",\n        placeholder: \"Price\",\n        value: productData.price,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 37\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"contact\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 37\n        }\n      }, \"Stock Qty:\"), __jsx(\"input\", {\n        type: \"text\",\n        name: \"contact\",\n        placeholder: \"Contact No.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 37\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"contact\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 37\n        }\n      }, \"--Select Categories--\"), __jsx(\"input\", {\n        type: \"text\",\n        name: \"contact\",\n        placeholder: \"Contact No.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 37\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"contact\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 37\n        }\n      }, \"--Select Brands--\"), __jsx(\"input\", {\n        type: \"text\",\n        name: \"contact\",\n        placeholder: \"Contact No.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 37\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"contact\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 37\n        }\n      }, \"Product Image\"), __jsx(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        placeholder: \"file *.png, *.jpg...\",\n        onChange: selectFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 37\n        }\n      })) : __jsx(React.Fragment, null, __jsx(\"label\", {\n        htmlFor: \"productname\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 41\n        }\n      }, \"Product Name:\"), __jsx(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Enter Product Name\",\n        value: productData.name,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 41\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 41\n        }\n      }, \"Product Desc:\"), __jsx(\"textarea\", {\n        type: \"text\",\n        name: \"description\",\n        placeholder: \"Product Description\",\n        value: productData.description,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 41\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"city\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 41\n        }\n      }, \"Price:\"), __jsx(\"input\", {\n        type: \"number\",\n        name: \"price\",\n        placeholder: \"Price\",\n        value: productData.price,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 41\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"contact\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 41\n        }\n      }, \"Stock Qty:\"), __jsx(\"input\", {\n        type: \"text\",\n        name: \"contact\",\n        placeholder: \"Contact No.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 41\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"contact\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 41\n        }\n      }, \"--Select Categories--\"), __jsx(\"input\", {\n        type: \"text\",\n        name: \"contact\",\n        placeholder: \"Contact No.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 41\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"contact\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 41\n        }\n      }, \"--Select Brands--\"), __jsx(\"input\", {\n        type: \"text\",\n        name: \"contact\",\n        placeholder: \"Contact No.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 41\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"contact\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 41\n        }\n      }, \"Product Image\"), __jsx(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        placeholder: \"file *.png, *.jpg...\",\n        onChange: selectFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 41\n        }\n      }))), __jsx(\"div\", {\n        className: \"create-product-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }\n      }, !edit ? __jsx(React.Fragment, null, __jsx(\"button\", {\n        className: \"btn-back-products\",\n        onClick: () => Router.push('/userProducts'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 37\n        }\n      }, \"Back\"), __jsx(\"button\", {\n        className: \"btn-submit\",\n        type: \"submit\",\n        style: {\n          cursor: !productData.name || !productData.description || !productData.price || !file || loading ? 'not-allowed' : 'pointer'\n        },\n        disabled: !productData.name || !productData.description || !productData.price || !file || loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 37\n        }\n      }, \"Submit\", loading ? 'Submiting...' : '')) : __jsx(React.Fragment, null, __jsx(\"button\", {\n        className: \"btn-back-products\",\n        onClick: () => Router.push('/userProducts'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 37\n        }\n      }, \"Back\"), __jsx(\"button\", {\n        className: \"btn-submit\",\n        type: \"submit\",\n        style: {\n          cursor: !productData.name || !productData.description || !productData.price || !file || loading ? 'not-allowed' : 'pointer'\n        },\n        disabled: !productData.name || !productData.description || !productData.price || !file || loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 37\n        }\n      }, \"Update\", loading ? 'Submiting...' : ''))))));\n    });\n\n    this.nameElRef = /*#__PURE__*/React.createRef();\n    this.descriptionElRef = /*#__PURE__*/React.createRef();\n    this.priceElRef = /*#__PURE__*/React.createRef();\n    this.imageUrlElRef = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    const CreateForm = this._renderCreateProduct();\n\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"product-content__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }\n    }, __jsx(\"h2\", {\n      className: \"dash-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }\n    }, \"All Products List\"), __jsx(\"a\", {\n      onClick: this.CreateEventHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }\n    }, __jsx(\"span\", {\n      className: \"ti-plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 25\n      }\n    }), __jsx(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 25\n      }\n    }, \"Add Product\"))), this.state.creating && __jsx(Backdrop, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 42\n      }\n    }), this.state.creating && __jsx(Modal, {\n      title: \"Create Product\",\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }\n    }, __jsx(\"form\", {\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 29\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 33\n      }\n    }, \"Product Name\"), __jsx(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      placeholder: \"product name\",\n      ref: this.nameElRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 33\n      }\n    })), __jsx(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 29\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 33\n      }\n    }, \"Product Description\"), __jsx(\"textarea\", {\n      type: \"text\",\n      id: \"description\",\n      name: \"description\",\n      placeholder: \"product description\",\n      ref: this.descriptionElRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 33\n      }\n    })), __jsx(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 29\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 33\n      }\n    }, \"Price\"), __jsx(\"input\", {\n      type: \"number\",\n      id: \"price\",\n      name: \"price\",\n      placeholder: \"price\",\n      ref: this.priceElRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 33\n      }\n    })), __jsx(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 29\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 33\n      }\n    }, \"Image\"), __jsx(\"input\", {\n      type: \"text\",\n      id: \"image\",\n      name: \"image\",\n      placeholder: \"product image\",\n      ref: this.imageUrlElRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 33\n      }\n    })))), __jsx(ProductList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default UserProduct;","map":{"version":3,"sources":["/home/loki/Desktop/Projects/Shoppin/shop-client/components/UserProduct/index.jsx"],"names":["React","Component","useState","ProductList","Backdrop","Modal","CreateProduct","useMutation","fetch","Router","QUERY_PRODUCTS","CREATE_PRODUCT","UPDATE_PRODUCT","MY_PRODUCTS","UserProduct","constructor","props","creating","setState","name","nameElRef","current","value","description","descriptionElRef","price","priceElRef","imageUrl","imageUrlElRef","event","edit","setEdit","file","setFile","productData","setProductData","createProduct","loading","error","refetchQueries","query","handleChange","e","target","selectFile","files","uploadFile","data","FormData","append","res","method","body","result","json","secure_url","handleSubmit","preventDefault","url","variables","push","console","log","cursor","createRef","render","CreateForm","_renderCreateProduct","CreateEventHandler","state","modalCancelHandler","modalConfirmHandler"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport ProductList from './ProductList';\nimport Backdrop from '../Backdrop';\nimport Modal from '../Modal';\nimport CreateProduct from './CreateProduct';\n\n\nimport { useMutation } from '@apollo/react-hooks';\nimport fetch from 'isomorphic-unfetch';\nimport Router from 'next/router';\nimport { QUERY_PRODUCTS, CREATE_PRODUCT, UPDATE_PRODUCT, MY_PRODUCTS } from '../../graphql/Products';\n\n\nclass UserProduct extends Component {\n    state = {\n        creating: false\n    };\n\n    constructor(props) {\n        super(props);\n        this.nameElRef = React.createRef();\n        this.descriptionElRef = React.createRef();\n        this.priceElRef = React.createRef();\n        this.imageUrlElRef = React.createRef();\n    }\n    CreateEventHandler = () => {\n        this.setState({ creating: true });\n    };\n\n    modalConfirmHandler = () => {\n        this.setState({ creating: false });\n        this.name = this.nameElRef.current.value;\n        this.description = this.descriptionElRef.current.value;\n        this.price = this.priceElRef.current.value;\n        this.imageUrl = this.imageUrlElRef.current.value;\n\n        const event =  {name, description, price, imageUrl} \n    };\n\n    modalCancelHandler = () => {\n        this.setState({ creating: false });\n    };\n    /**\n     * Create Form Component with Function\n     */\n    _renderCreateProduct = () => () => {\n        const [edit, setEdit] = useState(false)\n        const [file, setFile] = useState(null)\n        const [productData, setProductData] = useState({\n            name: '',\n            description: '',\n            price: '',\n            imageUrl: ''\n        })\n\n        const [createProduct, { loading, error }] = useMutation(CREATE_PRODUCT, {\n            refetchQueries: [{ query: QUERY_PRODUCTS }]\n        })\n\n        const handleChange = e => setProductData({\n            ...productData,\n            [e.target.name]: e.target.value\n        })\n\n        const selectFile = e => {\n            const files = e.target.files\n            setFile(files[0])\n            //console.log(files)\n        }\n\n        //Upload File to Cloudinary\n        const uploadFile = async () => {\n            const data = new FormData()\n            data.append('file', file)\n            data.append('upload_preset', 'shoppin')\n            const res = await fetch('https://api.cloudinary.com/v1_1/swizce/image/upload', {\n                method: 'post',\n                body: data\n            })\n            const result = await res.json()\n            //console.log('image result',  result)\n            return result.secure_url\n        }\n\n        const handleSubmit = async e => {\n            try {\n                e.preventDefault()\n                const url = await uploadFile()\n                // console.log('image Url:', url)\n                if (url) {\n                    const result = await createProduct({\n                        variables: {\n                            ...productData,\n                            price: +productData.price,\n                            imageUrl: url\n                        },\n                    })\n                    //console.log('Product Data:', result)\n                    return result;\n                }\n                Router.push('/userProducts')\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        return (\n            <div className=\"create-product-card\">\n                <div className=\"create-product_tabs\">\n                    <h5>create More tabs here</h5>\n                    <ul>\n                        <li><a href=\"\">Product Basic Info</a></li>\n                        <li><a href=\"\">Product Image Gallary</a></li>\n                        <li><a href=\"\">Product Promotion</a></li>\n                        <li><a href=\"\">Product Slug detail</a></li>\n                        <li><a href=\"\">Product Release QR-Code</a></li>\n                    </ul>\n                </div>\n                <div className=\"create-product_form\">\n                    <form onSubmit={handleSubmit} >\n                        <div className=\"info-state\">\n                            {\n                                !edit ? <>\n                                    <label htmlFor=\"productname\">Product Name:</label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"name\"\n                                        placeholder=\"Enter Product Name\"\n                                        value={productData.name}\n                                        onChange={handleChange}\n                                    />\n                                    <label htmlFor=\"address\">Product Desc:</label>\n                                    <textarea\n                                        type=\"text\"\n                                        name=\"description\"\n                                        placeholder=\"Product Description\"\n                                        value={productData.description}\n                                        onChange={handleChange}\n                                    />\n                                    <label htmlFor=\"city\">Price:</label>\n                                    <input\n                                        type=\"number\"\n                                        name=\"price\"\n                                        placeholder=\"Price\"\n                                        value={productData.price}\n                                        onChange={handleChange}\n                                    />\n                                    <label htmlFor=\"contact\">Stock Qty:</label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"contact\"\n                                        placeholder=\"Contact No.\"\n                                    />\n                                    <label htmlFor=\"contact\">--Select Categories--</label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"contact\"\n                                        placeholder=\"Contact No.\"\n                                    />\n                                    <label htmlFor=\"contact\">--Select Brands--</label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"contact\"\n                                        placeholder=\"Contact No.\"\n                                    />\n                                    <label htmlFor=\"contact\">Product Image</label>\n                                    <input\n                                        type=\"file\"\n                                        name=\"file\"\n                                        placeholder=\"file *.png, *.jpg...\"\n                                        onChange={selectFile}\n                                    />\n                                </> : <>\n                                        <label htmlFor=\"productname\">Product Name:</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"name\"\n                                            placeholder=\"Enter Product Name\"\n                                            value={productData.name}\n                                            onChange={handleChange}\n                                        />\n                                        <label htmlFor=\"address\">Product Desc:</label>\n                                        <textarea\n                                            type=\"text\"\n                                            name=\"description\"\n                                            placeholder=\"Product Description\"\n                                            value={productData.description}\n                                            onChange={handleChange}\n                                        />\n                                        <label htmlFor=\"city\">Price:</label>\n                                        <input\n                                            type=\"number\"\n                                            name=\"price\"\n                                            placeholder=\"Price\"\n                                            value={productData.price}\n                                            onChange={handleChange}\n                                        />\n                                        <label htmlFor=\"contact\">Stock Qty:</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"contact\"\n                                            placeholder=\"Contact No.\"\n                                        />\n                                        <label htmlFor=\"contact\">--Select Categories--</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"contact\"\n                                            placeholder=\"Contact No.\"\n                                        />\n                                        <label htmlFor=\"contact\">--Select Brands--</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"contact\"\n                                            placeholder=\"Contact No.\"\n                                        />\n                                        <label htmlFor=\"contact\">Product Image</label>\n                                        <input\n                                            type=\"file\"\n                                            name=\"file\"\n                                            placeholder=\"file *.png, *.jpg...\"\n                                            onChange={selectFile}\n                                        />\n                                    </>\n                            }\n\n                        </div>\n                        <div className=\"create-product-footer\">\n                        {\n                            !edit ?\n                                <>\n                                    <button className=\"btn-back-products\" onClick={() => Router.push('/userProducts')}>Back</button>\n                                    <button\n                                        className=\"btn-submit\"\n                                        type=\"submit\"\n                                        style={{ cursor: !productData.name || !productData.description || !productData.price || !file || loading ? 'not-allowed' : 'pointer' }}\n                                        disabled={!productData.name || !productData.description || !productData.price || !file || loading}\n                                    >Submit{loading ? 'Submiting...' : ''}</button>\n                                </>\n                                :\n                                <>\n                                    <button className=\"btn-back-products\" onClick={() => Router.push('/userProducts')}>Back</button>\n                                    <button\n                                        className=\"btn-submit\"\n                                        type=\"submit\"\n                                        style={{ cursor: !productData.name || !productData.description || !productData.price || !file || loading ? 'not-allowed' : 'pointer' }}\n                                        disabled={!productData.name || !productData.description || !productData.price || !file || loading}\n                                    >Update{loading ? 'Submiting...' : ''}</button>\n                                </>\n                        }\n                    </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        const CreateForm = this._renderCreateProduct();\n        return (\n            <>\n                <div className=\"product-content__header\">\n                    <h2 className=\"dash-title\">All Products List</h2>\n                    <a onClick={this.CreateEventHandler}>\n                        <span className=\"ti-plus\"></span>\n                        <small>Add Product</small>\n                    </a>\n                </div>\n                { this.state.creating && <Backdrop />}\n                { this.state.creating && (\n                    <Modal title=\"Create Product\"\n                        canCancel\n                        canConfirm\n                        onCancel={this.modalCancelHandler}\n                        onConfirm={this.modalConfirmHandler}>\n                        {/* <CreateForm /> */}\n                        <form action=\"\">\n                            <div className=\"form-control\">\n                                <label htmlFor=\"name\">Product Name</label>\n                                <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"product name\" ref={this.nameElRef}/>\n                            </div>\n\n                            <div className=\"form-control\">\n                                <label htmlFor=\"description\">Product Description</label>\n                                <textarea type=\"text\" id=\"description\" name=\"description\" placeholder=\"product description\" ref={this.descriptionElRef}/>\n                            </div>\n\n                            <div className=\"form-control\">\n                                <label htmlFor=\"price\">Price</label>\n                                <input type=\"number\" id=\"price\" name=\"price\" placeholder=\"price\" ref={this.priceElRef}/>\n                            </div>\n\n                            {/* <div className=\"form-control\">\n                                <label htmlFor=\"name\">Product Name</label>\n                                <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"product name\"/>\n                            </div> */}\n\n                            <div className=\"form-control\">\n                                <label htmlFor=\"image\">Image</label>\n                                <input type=\"text\" id=\"image\" name=\"image\" placeholder=\"product image\" ref={this.imageUrlElRef}/>\n                            </div>\n\n                        </form>\n                    </Modal>)}\n                <ProductList />\n            </>\n        )\n    }\n}\n\nexport default UserProduct;\n"]},"metadata":{},"sourceType":"module"}