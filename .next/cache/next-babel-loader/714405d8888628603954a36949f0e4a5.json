{"ast":null,"code":"var _jsxFileName = \"/home/loki/Desktop/Projects/Shoppin/shop-client/pages/signin/resetpassword.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport Cookies from 'js-cookie';\nconst REQUEST_RESET_PASSWORD = gql`\n mutation REQUEST_RESET_PASSWORD($email: String!) {\n    requestResetPassword(email: $email){\n      message\n    }\n}\n`;\n\nconst ResetPasswordPage = () => {\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: message,\n    1: setMessage\n  } = useState();\n\n  const handleChange = e => {// setUserInfo({\n    //   ...userInfo,\n    //   [e.target.name]: e.target.value, //Target Name and Value\n    // })    \n  };\n\n  const [requestResetPassword, {\n    loading,\n    error\n  }] = useMutation(REQUEST_RESET_PASSWORD, {\n    variables: {\n      email\n    },\n    onCompleted: data => {\n      if (data) {\n        setMessage(data.requestResetPassword.message);\n      }\n    }\n  });\n\n  const handleSubmit = async e => {\n    try {\n      e.preventDefault(); // await login()\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      margin: '100px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      margin: 'auto',\n      width: '45%'\n    },\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Reset Password Form\"), __jsx(\"input\", {\n    style: {\n      margin: '5px',\n      height: '30px'\n    },\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Enter Email\" //value={userInfo.email}\n    ,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: {\n      width: '30%',\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    style: {\n      margin: '5px',\n      padding: '10px',\n      background: 'teal',\n      color: 'white',\n      border: 'none',\n      cursor: 'pointer',\n      fontSize: '18px'\n    },\n    type: \"submit\" //disabled={loading}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Submit\")));\n};\n\nexport default ResetPasswordPage;","map":{"version":3,"sources":["/home/loki/Desktop/Projects/Shoppin/shop-client/pages/signin/resetpassword.js"],"names":["React","useState","useContext","useMutation","gql","Link","Router","Cookies","REQUEST_RESET_PASSWORD","ResetPasswordPage","email","setEmail","message","setMessage","handleChange","e","requestResetPassword","loading","error","variables","onCompleted","data","handleSubmit","preventDefault","console","log","margin","display","flexDirection","width","height","padding","background","color","border","cursor","fontSize"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAGA,MAAMC,sBAAsB,GAAGJ,GAAI;;;;;;CAAnC;;AAOA,MAAMK,iBAAiB,GAAG,MAAM;AAC9B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACW,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,EAAtC;;AACA,QAAMa,YAAY,GAAGC,CAAC,IAAI,CACxB;AACA;AACA;AACA;AACD,GALD;;AAOA,QAAM,CAACC,oBAAD,EAAuB;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAvB,IAA2Cf,WAAW,CAACK,sBAAD,EAAyB;AACnFW,IAAAA,SAAS,EAAE;AAAET,MAAAA;AAAF,KADwE;AAEnFU,IAAAA,WAAW,EAAEC,IAAI,IAAI;AACnB,UAAGA,IAAH,EAAS;AACPR,QAAAA,UAAU,CAACQ,IAAI,CAACL,oBAAL,CAA0BJ,OAA3B,CAAV;AACD;AACJ;AANoF,GAAzB,CAA5D;;AASA,QAAMU,YAAY,GAAG,MAAMP,CAAN,IAAW;AAC9B,QAAI;AACFA,MAAAA,CAAC,CAACQ,cAAF,GADE,CAEF;AACD,KAHD,CAGE,OAAOL,KAAP,EAAc;AACdM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACD;AACF,GAPD;;AASA,SACE;AAAK,IAAA,KAAK,EAAE;AAAEQ,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAC,MADH;AAELC,MAAAA,aAAa,EAAE,QAFV;AAGLF,MAAAA,MAAM,EAAE,MAHH;AAILG,MAAAA,KAAK,EAAE;AAJF,KADT;AAOE,IAAA,QAAQ,EAAEP,YAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BARF,EASE;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,MAAM,EAAE,KADH;AAELI,MAAAA,MAAM,EAAE;AAFH,KADT;AAKE,IAAA,IAAI,EAAC,OALP;AAME,IAAA,IAAI,EAAC,OANP;AAOE,IAAA,WAAW,EAAC,aAPd,CAQE;AARF;AASE,IAAA,QAAQ,EAAEhB,YATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAoBE;AAAK,IAAA,KAAK,EAAE;AAACe,MAAAA,KAAK,EAAE,KAAR;AAAeH,MAAAA,MAAM,EAAE;AAAvB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,EAuBE;AACE,IAAA,KAAK,EAAE;AACLA,MAAAA,MAAM,EAAE,KADH;AAELK,MAAAA,OAAO,EAAE,MAFJ;AAGLC,MAAAA,UAAU,EAAE,MAHP;AAILC,MAAAA,KAAK,EAAC,OAJD;AAKLC,MAAAA,MAAM,EAAC,MALF;AAMLC,MAAAA,MAAM,EAAE,SANH;AAOLC,MAAAA,QAAQ,EAAC;AAPJ,KADT;AAUE,IAAA,IAAI,EAAC,QAVP,CAWE;AAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF,CADA,CADF;AA0CD,CAtED;;AAwEA,eAAe3B,iBAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport {useMutation} from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport Cookies from 'js-cookie';\n\n\nconst REQUEST_RESET_PASSWORD = gql`\n mutation REQUEST_RESET_PASSWORD($email: String!) {\n    requestResetPassword(email: $email){\n      message\n    }\n}\n`\nconst ResetPasswordPage = () => {\n  const [email, setEmail] = useState('')\n  const [message, setMessage] = useState()\n  const handleChange = e => {\n    // setUserInfo({\n    //   ...userInfo,\n    //   [e.target.name]: e.target.value, //Target Name and Value\n    // })    \n  }\n\n  const [requestResetPassword, {loading, error}] = useMutation(REQUEST_RESET_PASSWORD, {\n    variables: { email }, \n    onCompleted: data => {\n      if(data) {\n        setMessage(data.requestResetPassword.message)\n      }\n  }})\n\n\n  const handleSubmit = async e => {\n    try {\n      e.preventDefault()\n      // await login()\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  \n  return (\n    <div style={{ margin: '100px'}}>\n    <form\n      style={{ \n        display:'flex', \n        flexDirection: 'column', \n        margin: 'auto', \n        width: '45%' \n      }} \n      onSubmit={handleSubmit} >\n      <h3>Reset Password Form</h3>\n      <input \n        style={{ \n          margin: '5px', \n          height: '30px'\n        }} \n        type=\"email\" \n        name=\"email\" \n        placeholder=\"Enter Email\"\n        //value={userInfo.email}\n        onChange={handleChange}\n      />\n      <div style={{width: '30%', margin: 'auto'}}>\n        {/* {error && <p style={{ color: 'red'}}>{error.graphQLErrors[0].message}</p>} */}\n      </div>\n      <button \n        style={{ \n          margin: '5px', \n          padding: '10px', \n          background: 'teal', \n          color:'white', \n          border:'none', \n          cursor: 'pointer',\n          fontSize:'18px'\n          }}\n        type='submit'\n        //disabled={loading}\n        >Submit</button>\n    </form>\n    \n  </div>\n  )\n}\n\nexport default ResetPasswordPage\n"]},"metadata":{},"sourceType":"module"}