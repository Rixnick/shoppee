{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/loki/Desktop/Projects/Shoppin/shop-client/components/Leftbar/Categories.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_CATEGORIES } from '../../graphql/Category';\n\nvar Categories = function Categories() {\n  _s();\n\n  var _useQuery = useQuery(QUERY_CATEGORIES),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error; //console.log(\"Categories:\", data)\n\n\n  if (error) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 23\n    }\n  }, \"Ooops....! Something went wrong, Plz try again later\");\n  if (loading) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 25\n    }\n  }, \"loading...\");\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, __jsx(\"select\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, data.categories.map(function (category) {\n    return __jsx(\"option\", {\n      value: category.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }\n    }, category.name);\n  })));\n};\n\n_s(Categories, \"RsAoF0jGW8x/4pnnopXB/YWtfZ8=\", false, function () {\n  return [useQuery];\n});\n\n_c = Categories;\nexport default Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"sources":["/home/loki/Desktop/Projects/Shoppin/shop-client/components/Leftbar/Categories.jsx"],"names":["React","useQuery","QUERY_CATEGORIES","Categories","data","loading","error","categories","map","category","id","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAAUC,gBAAV,QAAmC,wBAAnC;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AAAA,kBACUF,QAAQ,CAACC,gBAAD,CADlB;AAAA,MACdE,IADc,aACdA,IADc;AAAA,MACRC,OADQ,aACRA,OADQ;AAAA,MACCC,KADD,aACCA,KADD,EAErB;;;AACA,MAAIA,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAAP;AACX,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQD,IAAI,CAACG,UAAL,CAAgBC,GAAhB,CAAoB,UAAAC,QAAQ;AAAA,WACxB;AAAQ,MAAA,KAAK,EAAEA,QAAQ,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BD,QAAQ,CAACE,IAAtC,CADwB;AAAA,GAA5B,CAFR,CADJ,CADJ;AAWH,CAhBD;;GAAMR,U;UAC6BF,Q;;;KAD7BE,U;AAkBN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport {  QUERY_CATEGORIES  } from '../../graphql/Category';\n\nconst Categories = () => {\n    const {data, loading, error} = useQuery(QUERY_CATEGORIES);\n    //console.log(\"Categories:\", data)\n    if (error) return <p>Ooops....! Something went wrong, Plz try again later</p>\n    if (loading) return <p>loading...</p>\n    return (\n        <div>\n            <select>\n                {\n                    data.categories.map(category => (\n                        <option value={category.id}>{category.name}</option>\n                    ))\n                }\n            </select>\n        </div>\n    )\n}\n\nexport default Categories\n"]},"metadata":{},"sourceType":"module"}