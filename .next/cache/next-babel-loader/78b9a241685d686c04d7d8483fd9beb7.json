{"ast":null,"code":"var _jsxFileName = \"/home/loki/Desktop/Projects/Shoppin/shop-client/components/Products.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Link from 'next/link';\nimport { useQuery } from '@apollo/react-hooks';\nimport { AuthContext } from '../contexts/AuthProvider';\nimport { QUERY_PRODUCTS } from '../graphql/Products';\nimport Router from 'next/router';\nimport '../styles/_products.scss';\n\nfunction Products() {\n  _s();\n\n  var _this = this;\n\n  var _useQuery = useQuery(QUERY_PRODUCTS),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error; //, {pollInterval:3000} Add pollInterval to refresh page per second\n\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user;\n\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 20\n    }\n  }, \"Ooops....! Something went wrong, Plz try again later\");\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 22\n    }\n  }, \"loading...\");\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, data.products.map(function (prod) {\n    return __jsx(\"div\", {\n      className: \"product_card\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      src: prod.imageUrl,\n      alt: prod.description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }\n    }), __jsx(\"div\", {\n      className: \"product_box\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, __jsx(\"h3\", {\n      title: prod.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }\n    }, prod.name), __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }, \"$\", prod.price), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }\n    }, prod.description)), __jsx(\"div\", {\n      className: \"row_btn\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, user && user.id === prod.user.id ? __jsx(\"button\", {\n      className: \"btn-manage\",\n      onClick: function onClick() {\n        return Router.push('/manageProducts');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 38\n      }\n    }, \"Manage Products\") : __jsx(\"dvi\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 38\n      }\n    }, __jsx(\"button\", {\n      className: \"btn-add-carts\",\n      onClick: function onClick() {\n        return Router.push('/carts');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 38\n      }\n    }, \"Add Cart\"), __jsx(\"button\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 38\n      }\n    }, __jsx(Link, {\n      href: \"/products/product_detail\",\n      as: \"/products/\".concat(prod.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 38\n      }\n    }, \"View\")))));\n  } // <div className=\"product-container\">\n  // <figure>\n  //   { \n  //     user && user.id === prod.user.id ? \n  //             <Link href='/manageProducts'>\n  //                 <img src={prod.imageUrl} alt={prod.description}/>\n  //             </Link> : <Link href='/products/product_detail' as={`/products/${prod.id}`}>\n  //                 <img src={prod.imageUrl} alt={prod.description}/>\n  //             </Link> \n  //   }\n  // </figure>\n  // <h3>{prod.name}</h3>\n  // <p className=\"description-text\">\n  //   {prod.description}\n  // </p>\n  // <p>{prod.price}-THB</p>\n  // {\n  //     user && user.id === prod.user.id ? \n  //         <button className=\"btn-manage\"\n  //           onClick={() => Router.push('/manageProducts')}\n  //         >Manage Products</button> :\n  //         <button className=\"btn-add-carts\"\n  //         onClick={() => Router.push('/carts')}\n  //         >Add To Cart</button>\n  //       } \n  // </div>\n  ));\n}\n\n_s(Products, \"vOOE4j1IMfMyzn5kdqigUNwx0Qk=\", false, function () {\n  return [useQuery];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/loki/Desktop/Projects/Shoppin/shop-client/components/Products.jsx"],"names":["React","useContext","Link","useQuery","AuthContext","QUERY_PRODUCTS","Router","Products","data","loading","error","user","products","map","prod","imageUrl","description","name","price","id","push"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SAAQC,WAAR,QAA0B,0BAA1B;AACA,SAAQC,cAAR,QAA6B,qBAA7B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAO,0BAAP;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AAAA,kBACaJ,QAAQ,CAACE,cAAD,CADrB;AAAA,MACXG,IADW,aACXA,IADW;AAAA,MACLC,OADK,aACLA,OADK;AAAA,MACIC,KADJ,aACIA,KADJ,EACsC;;;AADtC,oBAEDT,UAAU,CAACG,WAAD,CAFT;AAAA,MAEVO,IAFU,eAEVA,IAFU;;AAIlB,MAAGD,KAAH,EAAU,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAAP;AACV,MAAGD,OAAH,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACZ,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACI,QAAL,CAAcC,GAAd,CAAkB,UAAAC,IAAI;AAAA,WACjB;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,QAAf;AAAyB,MAAA,GAAG,EAAED,IAAI,CAACE,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,EAGQ;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,KAAK,EAAEF,IAAI,CAACG,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBH,IAAI,CAACG,IAA7B,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQH,IAAI,CAACI,KAAb,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIJ,IAAI,CAACE,WAAT,CAHJ,CAHR,EAQQ;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAESL,IAAI,IAAIA,IAAI,CAACQ,EAAL,KAAYL,IAAI,CAACH,IAAL,CAAUQ,EAA9B,GACQ;AAAQ,MAAA,SAAS,EAAC,YAAlB;AACE,MAAA,OAAO,EAAE;AAAA,eAAMb,MAAM,CAACc,IAAP,CAAY,iBAAZ,CAAN;AAAA,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADR,GAIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,SAAS,EAAC,eAAlB;AACA,MAAA,OAAO,EAAE;AAAA,eAAMd,MAAM,CAACc,IAAP,CAAY,QAAZ,CAAN;AAAA,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,0BAAX;AAAsC,MAAA,EAAE,sBAAeN,IAAI,CAACK,EAApB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CAJA,CANjB,CARR,CADiB;AAAA,GAAtB,CA6BC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtDD,GADH,CADF;AA4DD;;GAlEQZ,Q;UACwBJ,Q;;;KADxBI,Q;AAoET,eAAeA,QAAf","sourcesContent":["import React, { useContext } from 'react';\nimport Link from 'next/link';\nimport {useQuery} from '@apollo/react-hooks';\nimport {AuthContext} from '../contexts/AuthProvider';\nimport {QUERY_PRODUCTS} from '../graphql/Products';\nimport Router from 'next/router';\nimport '../styles/_products.scss';\n\nfunction Products() {\n  const {data, loading, error} = useQuery(QUERY_PRODUCTS) //, {pollInterval:3000} Add pollInterval to refresh page per second\n  const { user } = useContext(AuthContext)\n\n  if(error) return <p>Ooops....! Something went wrong, Plz try again later</p>\n  if(loading) return <p>loading...</p>\n  return (\n    <div className=\"container\">\n      {data.products.map(prod => \n            <div className=\"product_card\">\n                    <img src={prod.imageUrl} alt={prod.description} />\n\n                    <div className=\"product_box\">\n                        <h3 title={prod.name} >{prod.name}</h3>\n                        <span>${prod.price}</span>\n                        <p>{prod.description}</p>\n                    </div>\n                    <div className=\"row_btn\">\n                        {  \n                             user && user.id === prod.user.id ? \n                                     <button className=\"btn-manage\"\n                                       onClick={() => Router.push('/manageProducts')}\n                                     >Manage Products</button> :\n                                     <dvi>\n                                     <button className=\"btn-add-carts\"\n                                     onClick={() => Router.push('/carts')}\n                                     >Add Cart</button>\n                                     <button>\n                                     <Link href='/products/product_detail' as={`/products/${prod.id}`}>\n                                     View</Link>\n                                     </button>\n                                     </dvi>\n                                     \n                        }\n                    </div>\n            </div>\n\n        // <div className=\"product-container\">\n        // <figure>\n        //   { \n        //     user && user.id === prod.user.id ? \n        //             <Link href='/manageProducts'>\n        //                 <img src={prod.imageUrl} alt={prod.description}/>\n        //             </Link> : <Link href='/products/product_detail' as={`/products/${prod.id}`}>\n        //                 <img src={prod.imageUrl} alt={prod.description}/>\n        //             </Link> \n        //   }\n        // </figure>\n        // <h3>{prod.name}</h3>\n        // <p className=\"description-text\">\n        //   {prod.description}\n        // </p>\n        // <p>{prod.price}-THB</p>\n        // {\n        //     user && user.id === prod.user.id ? \n        //         <button className=\"btn-manage\"\n        //           onClick={() => Router.push('/manageProducts')}\n        //         >Manage Products</button> :\n        //         <button className=\"btn-add-carts\"\n        //         onClick={() => Router.push('/carts')}\n        //         >Add To Cart</button>\n        //       } \n        // </div>\n      )}\n    </div>\n  )\n}\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}