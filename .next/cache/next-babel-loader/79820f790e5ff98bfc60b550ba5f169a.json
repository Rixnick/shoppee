{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useContext } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { LOG_IN } from '../graphql/User';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport Cookies from 'js-cookie'; // import '../styles/_login.scss';\n//import Auth Context from context Api\n\nimport { AuthContext } from '../contexts/AuthProvider';\n\nconst Login = () => {\n  const {\n    0: userInfo,\n    1: setUserInfo\n  } = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    setAuthUser\n  } = useContext(AuthContext);\n\n  const handleChange = e => {\n    setUserInfo(_objectSpread(_objectSpread({}, userInfo), {}, {\n      [e.target.name]: e.target.value //Target Name and Value\n\n    }));\n  };\n\n  const [login, {\n    loading,\n    error\n  }] = useMutation(LOG_IN, {\n    variables: _objectSpread({}, userInfo),\n    onCompleted: data => {\n      if (data) {\n        setAuthUser(data.login.user); //Set cookie here\n\n        Cookies.set('jwtToken', data.login.jwt);\n        setUserInfo({\n          email: \"\",\n          password: \"\"\n        });\n        Router.push('/dashboard');\n      }\n    }\n  });\n\n  const handleSubmit = async e => {\n    try {\n      e.preventDefault();\n      await login();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"login-page\"\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"h3\", null, \"Sign In Form\"), __jsx(\"div\", {\n    className: \"message\"\n  }, error && __jsx(\"p\", null, error.graphQLErrors[0].message)), __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Enter Email\",\n    value: userInfo.email,\n    onChange: handleChange\n  }), __jsx(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Enter Password\",\n    value: userInfo.password,\n    onChange: handleChange\n  }), __jsx(\"div\", {\n    className: \"p-forget\"\n  }, __jsx(\"p\", null, \"Forgot password?\", \" \", \" \", __jsx(\"span\", {\n    onClick: () => Router.push('/signin/requestresetpassword')\n  }, \"Click here\"))), __jsx(\"button\", {\n    className: \"btn-submit\",\n    type: \"submit\",\n    disabled: loading\n  }, \"Login Now!\"), __jsx(Link, {\n    href: \"/signup\"\n  }, __jsx(\"a\", null, \"Don't have an account? \", \" \", \" \", __jsx(\"span\", null, \"Signup here\")))));\n};\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}