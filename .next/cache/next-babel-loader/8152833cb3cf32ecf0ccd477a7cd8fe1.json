{"ast":null,"code":"var _jsxFileName = \"/home/loki/Desktop/Projects/Shoppin/shop-client/pages/products/[productId].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag'; //import apollo Client\n\nimport apolloClient from '../../apollo/apolloClient';\nconst QUERY_PRODUCT = gql`\n  query QUERY_PRODUCT($id: ID!) {\n  product(id: $id){\n    id\n    name\n    description\n    imageUrl\n    price\n    createdAt\n  }\n}\n`;\n\nfunction Product() {\n  const route = useRouter();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(QUERY_PRODUCT, {\n    variables: {\n      id: route.query.productId\n    }\n  }); // console.log('result', result)\n\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 20\n    }\n  }, \"Ooops....! Something went wrong, Plz try again later\");\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 22\n    }\n  }, \"loading...\");\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: data.product.imageUrl,\n    alt: data.product.description,\n    width: \"375px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, data.product.name), __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, data.product.price), __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, data.product.description));\n}\n\nexport default apolloClient(Product);","map":{"version":3,"sources":["/home/loki/Desktop/Projects/Shoppin/shop-client/pages/products/[productId].js"],"names":["React","useRouter","useQuery","gql","apolloClient","QUERY_PRODUCT","Product","route","data","loading","error","variables","id","query","productId","product","imageUrl","description","name","price"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAGA,MAAMC,aAAa,GAAGF,GAAI;;;;;;;;;;;CAA1B;;AAYA,SAASG,OAAT,GAAmB;AACjB,QAAMC,KAAK,GAAGN,SAAS,EAAvB;AACA,QAAM;AAACO,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBR,QAAQ,CAACG,aAAD,EAAgB;AAACM,IAAAA,SAAS,EAAE;AAACC,MAAAA,EAAE,EAAEL,KAAK,CAACM,KAAN,CAAYC;AAAjB;AAAZ,GAAhB,CAAvC,CAFiB,CAGjB;;AACA,MAAGJ,KAAH,EAAU,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAAP;AACV,MAAGD,OAAH,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACZ,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAED,IAAI,CAACO,OAAL,CAAaC,QAAvB;AAAiC,IAAA,GAAG,EAAER,IAAI,CAACO,OAAL,CAAaE,WAAnD;AAAgE,IAAA,KAAK,EAAC,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,IAAI,CAACO,OAAL,CAAaG,IAAlB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,IAAI,CAACO,OAAL,CAAaI,KAAlB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKX,IAAI,CAACO,OAAL,CAAaE,WAAlB,CAJF,CADF;AAQD;;AAED,eAAeb,YAAY,CAACE,OAAD,CAA3B","sourcesContent":["import React from 'react';\nimport {useRouter} from 'next/router';\nimport {useQuery} from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n//import apollo Client\nimport apolloClient from '../../apollo/apolloClient';\n\n\nconst QUERY_PRODUCT = gql`\n  query QUERY_PRODUCT($id: ID!) {\n  product(id: $id){\n    id\n    name\n    description\n    imageUrl\n    price\n    createdAt\n  }\n}\n`\nfunction Product() {\n  const route = useRouter()\n  const {data, loading, error} = useQuery(QUERY_PRODUCT, {variables: {id: route.query.productId}})\n  // console.log('result', result)\n  if(error) return <p>Ooops....! Something went wrong, Plz try again later</p>\n  if(loading) return <p>loading...</p>\n  return (\n    <div>\n      <img src={data.product.imageUrl} alt={data.product.description} width='375px' />\n      <h3>{data.product.name}</h3>\n      <h5>{data.product.price}</h5>\n      <h5>{data.product.description}</h5>\n    </div>\n  )\n}\n\nexport default apolloClient(Product)\n"]},"metadata":{},"sourceType":"module"}