{"ast":null,"code":"var _jsxFileName = \"/home/loki/Desktop/Projects/Shoppin/shop-client/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// import App from 'next/app'\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"../components/Layouts\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport AuthProvider from \"../contexts/AuthProvider\";\nimport apolloClient from \"../apollo/apolloClient\";\nimport cookie from \"cookie\";\nimport { QUERY_USER } from \"../graphql/User\";\nimport \"../styles/global.scss\";\nimport \"antd/dist/antd.css\";\nimport '@quasar/extras/ionicons-v4/ionicons-v4.css'; //const Backend_uri = process.env.BACKEND_URI\n// function MyApp({ Component, pageProps, apollo }) {\n//   return (\n//    <ApolloProvider client={apollo}>\n//       <Layout>\n//         <Component {...pageProps} />\n//       </Layout>\n//    </ApolloProvider>\n//   )\n// }\n\nfunction MyApp({\n  Component,\n  pageProps,\n  apollo,\n  user\n}) {\n  return __jsx(ApolloProvider, {\n    client: apollo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, __jsx(AuthProvider, {\n    userData: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 31\n    }\n  })))));\n}\n\nclass NextApp extends App {\n  static async getInitialProps({\n    ctx,\n    router\n  }) {\n    // calls page's `getInitialProps` and fills `appProps.pageProps`\n    if (false) {\n      return __NEXT_DATA__.props.pageProps;\n    } //console.log('Router -->', router)\n\n\n    const {\n      headers\n    } = ctx.req;\n    const cookies = headers && cookie.parse(headers.cookie || \"\");\n    const token = cookies && cookies.jwtToken;\n\n    if (!token) {\n      if (router.pathname === \"/dashboard\" || router.pathname === \"/userCart\" || router.pathname === \"/userBrands\" || router.pathname === \"/userCategories\" || router.pathname === \"/userProducts\" || router.pathname === \"/userProducts/createProduct\" || router.pathname === \"/userProfile\" || router.pathname === \"/userCustOrder\" || router.pathname === \"/checkOut\" || router.pathname === \"/userBank\") {\n        //Use OR To Protected more Routers\n        ctx.res.writeHead(302, {\n          Location: \"/signin\"\n        }); //302 Redirect Route code\n\n        ctx.res.end();\n      } //Add More Protected route here\n\n\n      return null;\n    } //\"http://localhost:5000/graphql\"\n\n\n    const response = await fetch(\"http://localhost:5000/graphql\", {\n      method: \"post\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        authorization: `Bearer ${token}` || \"\"\n      },\n      body: JSON.stringify(QUERY_USER)\n    }); //console.log(\"response data:\", response);\n\n    if (response.ok) {\n      const result = await response.json();\n      return {\n        user: result.data.user\n      }; //console.log('User Info -->',  result)\n    } else {\n      if (router.pathname === \"/carts\") {\n        ctx.res.writeHead(302, {\n          Location: '/signin'\n        }); //302 Redirect Route code\n\n        ctx.res.end();\n      } //Add More Protected route here\n\n\n      return null;\n    } //   let pageProps = {}\n    //   if (Component.getInitialProps) {\n    //     pageProps = await Component.getInitialProps(ctx)\n    //   }\n    //   return { pageProps }\n\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nMyApp.getInitialProps = async ({\n  ctx,\n  router\n}) => {\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\n  if (false) {\n    return __NEXT_DATA__.props.pageProps;\n  } //console.log('Router -->', router)\n\n\n  const {\n    headers\n  } = ctx.req;\n  const cookies = headers && cookie.parse(headers.cookie || \"\");\n  const token = cookies && cookies.jwtToken;\n\n  if (!token) {\n    if (router.pathname === \"/dashboard\" || router.pathname === \"/userCart\" || router.pathname === \"/userBrands\" || router.pathname === \"/userCategories\" || router.pathname === \"/userProducts\" || router.pathname === \"/userProducts/createProduct\" || router.pathname === \"/userProfile\" || router.pathname === \"/userCustOrder\" || router.pathname === \"/checkOut\" || router.pathname === \"/userBank\") {\n      //Use OR To Protected more Routers\n      ctx.res.writeHead(302, {\n        Location: \"/signin\"\n      }); //302 Redirect Route code\n\n      ctx.res.end();\n    } //Add More Protected route here\n\n\n    return null;\n  } //\"http://localhost:5000/graphql\"\n\n\n  const response = await fetch(\"http://localhost:5000/graphql\", {\n    method: \"post\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      authorization: `Bearer ${token}` || \"\"\n    },\n    body: JSON.stringify(QUERY_USER)\n  }); //console.log(\"response data:\", response);\n\n  if (response.ok) {\n    const result = await response.json();\n    return {\n      user: result.data.user\n    }; //console.log('User Info -->',  result)\n  } else {\n    if (router.pathname === \"/carts\") {\n      ctx.res.writeHead(302, {\n        Location: '/signin'\n      }); //302 Redirect Route code\n\n      ctx.res.end();\n    } //Add More Protected route here\n\n\n    return null;\n  }\n\n  console.log(ctx.req.headers);\n};\n\nexport default apolloClient(MyApp);","map":{"version":3,"sources":["/home/loki/Desktop/Projects/Shoppin/shop-client/pages/_app.js"],"names":["fetch","Layout","ApolloProvider","AuthProvider","apolloClient","cookie","QUERY_USER","MyApp","Component","pageProps","apollo","user","NextApp","App","getInitialProps","ctx","router","__NEXT_DATA__","props","headers","req","cookies","parse","token","jwtToken","pathname","res","writeHead","Location","end","response","method","authorization","body","JSON","stringify","ok","result","json","data","render","console","log"],"mappings":"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","sourcesContent":["// import App from 'next/app'\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"../components/Layouts\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport AuthProvider from \"../contexts/AuthProvider\";\nimport apolloClient from \"../apollo/apolloClient\";\nimport cookie from \"cookie\";\nimport { QUERY_USER } from \"../graphql/User\";\nimport \"../styles/global.scss\";\nimport \"antd/dist/antd.css\";\nimport '@quasar/extras/ionicons-v4/ionicons-v4.css';\n\n\n//const Backend_uri = process.env.BACKEND_URI\n\n// function MyApp({ Component, pageProps, apollo }) {\n//   return (\n//    <ApolloProvider client={apollo}>\n//       <Layout>\n//         <Component {...pageProps} />\n//       </Layout>\n//    </ApolloProvider>\n//   )\n// }\n\nfunction MyApp({ Component, pageProps, apollo, user }) {\n      return (\n            <ApolloProvider client={apollo}>\n                  <AuthProvider userData={user}>\n                        <Layout>\n                              <Component {...pageProps} />\n                        </Layout>\n                  </AuthProvider>\n            </ApolloProvider>\n      );\n}\n\nclass NextApp extends App {\n    static async getInitialProps({ ctx, router }) {\n\n        // calls page's `getInitialProps` and fills `appProps.pageProps`\n      if (process.browser) {\n        return __NEXT_DATA__.props.pageProps;\n  }\n\n  //console.log('Router -->', router)\n\n  const { headers } = ctx.req;\n  const cookies = headers && cookie.parse(headers.cookie || \"\");\n  const token = cookies && cookies.jwtToken;\n\n  if (!token) {\n        if (\n                router.pathname === \"/dashboard\" ||\n                router.pathname === \"/userCart\" ||\n                router.pathname === \"/userBrands\" ||\n                router.pathname === \"/userCategories\" ||\n                router.pathname === \"/userProducts\" ||\n                router.pathname === \"/userProducts/createProduct\" ||\n                router.pathname === \"/userProfile\" ||\n                router.pathname === \"/userCustOrder\" ||\n                router.pathname === \"/checkOut\" ||\n                router.pathname === \"/userBank\"\n        ) {\n              //Use OR To Protected more Routers\n              ctx.res.writeHead(302, { Location: \"/signin\" }); //302 Redirect Route code\n              ctx.res.end();\n        }\n        //Add More Protected route here\n        return null;\n  }\n  //\"http://localhost:5000/graphql\"\n  const response = await fetch(\"http://localhost:5000/graphql\", {\n        method: \"post\",\n        headers: {\n              \"Content-type\": \"application/json\",\n              authorization: `Bearer ${token}` || \"\",\n        },\n        body: JSON.stringify(QUERY_USER),\n  });\n  //console.log(\"response data:\", response);\n  if (response.ok) {\n        const result = await response.json();\n        return { user: result.data.user };\n        //console.log('User Info -->',  result)\n  } else {\n        if(router.pathname === \"/carts\") {\n          ctx.res.writeHead(302, {Location: '/signin'}) //302 Redirect Route code\n          ctx.res.end()\n        }\n        //Add More Protected route here\n        return null;\n  }\n\n\n\n\n\n    //   let pageProps = {}\n    //   if (Component.getInitialProps) {\n    //     pageProps = await Component.getInitialProps(ctx)\n    //   }\n  \n    //   return { pageProps }\n    }\n  \n    render() {\n      const { Component, pageProps } = this.props\n  \n      return (\n        <Component {...pageProps} />\n      )\n    }\n  }\n\n\nMyApp.getInitialProps =  async ({ ctx, router }) => {\n      // calls page's `getInitialProps` and fills `appProps.pageProps`\n      if (process.browser) {\n            return __NEXT_DATA__.props.pageProps;\n      }\n\n      //console.log('Router -->', router)\n\n      const { headers } = ctx.req;\n      const cookies = headers && cookie.parse(headers.cookie || \"\");\n      const token = cookies && cookies.jwtToken;\n\n      if (!token) {\n            if (\n                    router.pathname === \"/dashboard\" ||\n                    router.pathname === \"/userCart\" ||\n                    router.pathname === \"/userBrands\" ||\n                    router.pathname === \"/userCategories\" ||\n                    router.pathname === \"/userProducts\" ||\n                    router.pathname === \"/userProducts/createProduct\" ||\n                    router.pathname === \"/userProfile\" ||\n                    router.pathname === \"/userCustOrder\" ||\n                    router.pathname === \"/checkOut\" ||\n                    router.pathname === \"/userBank\"\n            ) {\n                  //Use OR To Protected more Routers\n                  ctx.res.writeHead(302, { Location: \"/signin\" }); //302 Redirect Route code\n                  ctx.res.end();\n            }\n            //Add More Protected route here\n            return null;\n      }\n      //\"http://localhost:5000/graphql\"\n      const response = await fetch(\"http://localhost:5000/graphql\", {\n            method: \"post\",\n            headers: {\n                  \"Content-type\": \"application/json\",\n                  authorization: `Bearer ${token}` || \"\",\n            },\n            body: JSON.stringify(QUERY_USER),\n      });\n      //console.log(\"response data:\", response);\n      if (response.ok) {\n            const result = await response.json();\n            return { user: result.data.user };\n            //console.log('User Info -->',  result)\n      } else {\n            if(router.pathname === \"/carts\") {\n              ctx.res.writeHead(302, {Location: '/signin'}) //302 Redirect Route code\n              ctx.res.end()\n            }\n            //Add More Protected route here\n            return null;\n      }\n      console.log(ctx.req.headers)\n};\n\nexport default apolloClient(MyApp);\n"]},"metadata":{},"sourceType":"module"}