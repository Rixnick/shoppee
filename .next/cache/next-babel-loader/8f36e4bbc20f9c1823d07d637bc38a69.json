{"ast":null,"code":"var _jsxFileName = \"/home/loki/Desktop/Projects/Shoppin/shop-client/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// import App from 'next/app'\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"../components/Layouts\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport AuthProvider from \"../contexts/AuthProvider\";\nimport apolloClient from \"../apollo/apolloClient\";\nimport cookie from \"cookie\";\nimport { QUERY_USER } from \"../graphql/User\";\nimport \"../styles/global.scss\";\nimport \"antd/dist/antd.css\";\nimport '@quasar/extras/ionicons-v4/ionicons-v4.css'; // function MyApp({ Component, pageProps, apollo }) {\n//   return (\n//    <ApolloProvider client={apollo}>\n//       <Layout>\n//         <Component {...pageProps} />\n//       </Layout>\n//    </ApolloProvider>\n//   )\n// }\n\nfunction MyApp({\n  Component,\n  pageProps,\n  apollo,\n  user\n}) {\n  return __jsx(ApolloProvider, {\n    client: apollo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, __jsx(AuthProvider, {\n    userData: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 31\n    }\n  })))));\n}\n\nMyApp.getInitialProps = async ({\n  ctx,\n  router\n}) => {\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\n  if (false) {\n    return __NEXT_DATA__.props.pageProps;\n  } //console.log('Router -->', router)\n\n\n  const {\n    headers\n  } = ctx.req;\n  const cookies = headers && cookie.parse(headers.cookie || \"\");\n  const token = cookies && cookies.jwtToken;\n\n  if (!token) {\n    if (router.pathname === \"/dashboard\" || router.pathname === \"/carts\" || router.pathname === \"/manage\" || router.pathname === \"/manage/createProduct\" || router.pathname === \"/profile\" || router.pathname === \"/profile/create\" || router.pathname === \"/categories\" || router.pathname === \"/brands\" || router.pathname === \"/brands/createBrand\" || router.pathname === \"/banks\" || router.pathname === \"/banks/CreateBankAc\") {\n      //Use OR To Protected more Routers\n      ctx.res.writeHead(302, {\n        Location: \"/signin\"\n      }); //302 Redirect Route code\n\n      ctx.res.end();\n    } //Add More Protected route here\n\n\n    return null;\n  }\n\n  const response = await fetch(\"http://localhost:5000/graphql\", {\n    method: \"post\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      authorization: `Bearer ${token}` || \"\"\n    },\n    body: JSON.stringify(QUERY_USER)\n  }); //console.log(\"response data:\", response);\n\n  if (response.ok) {\n    const result = await response.json();\n    return {\n      user: result.data.user\n    }; //console.log('User Info -->',  result)\n  } else {\n    if (router.pathname === \"/carts\") {\n      ctx.res.writeHead(302, {\n        Location: '/signin'\n      }); //302 Redirect Route code\n\n      ctx.res.end();\n    } //Add More Protected route here\n\n\n    return null;\n  }\n\n  console.log(ctx.req.headers);\n};\n\nexport default apolloClient(MyApp);","map":{"version":3,"sources":["/home/loki/Desktop/Projects/Shoppin/shop-client/pages/_app.js"],"names":["fetch","Layout","ApolloProvider","AuthProvider","apolloClient","cookie","QUERY_USER","MyApp","Component","pageProps","apollo","user","getInitialProps","ctx","router","__NEXT_DATA__","props","headers","req","cookies","parse","token","jwtToken","pathname","res","writeHead","Location","end","response","method","authorization","body","JSON","stringify","ok","result","json","data","console","log"],"mappings":"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","sourcesContent":["// import App from 'next/app'\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"../components/Layouts\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport AuthProvider from \"../contexts/AuthProvider\";\nimport apolloClient from \"../apollo/apolloClient\";\nimport cookie from \"cookie\";\nimport { QUERY_USER } from \"../graphql/User\";\nimport \"../styles/global.scss\";\nimport \"antd/dist/antd.css\";\nimport '@quasar/extras/ionicons-v4/ionicons-v4.css';\n\n\n// function MyApp({ Component, pageProps, apollo }) {\n//   return (\n//    <ApolloProvider client={apollo}>\n//       <Layout>\n//         <Component {...pageProps} />\n//       </Layout>\n//    </ApolloProvider>\n//   )\n// }\n\nfunction MyApp({ Component, pageProps, apollo, user }) {\n      return (\n            <ApolloProvider client={apollo}>\n                  <AuthProvider userData={user}>\n                        <Layout>\n                              <Component {...pageProps} />\n                        </Layout>\n                  </AuthProvider>\n            </ApolloProvider>\n      );\n}\n\nMyApp.getInitialProps = async ({ ctx, router }) => {\n      // calls page's `getInitialProps` and fills `appProps.pageProps`\n      if (process.browser) {\n            return __NEXT_DATA__.props.pageProps;\n      }\n\n      //console.log('Router -->', router)\n\n      const { headers } = ctx.req;\n      const cookies = headers && cookie.parse(headers.cookie || \"\");\n      const token = cookies && cookies.jwtToken;\n\n      if (!token) {\n            if (\n                    router.pathname === \"/dashboard\" ||\n                    router.pathname === \"/carts\" ||\n                    router.pathname === \"/manage\" ||\n                    router.pathname === \"/manage/createProduct\"||\n                    router.pathname === \"/profile\"||\n                    router.pathname === \"/profile/create\" ||\n                    router.pathname === \"/categories\" ||\n                    router.pathname ===\"/brands\" ||\n                    router.pathname ===\"/brands/createBrand\" ||\n                    router.pathname === \"/banks\" ||\n                    router.pathname ===\"/banks/CreateBankAc\"\n            ) {\n                  //Use OR To Protected more Routers\n                  ctx.res.writeHead(302, { Location: \"/signin\" }); //302 Redirect Route code\n                  ctx.res.end();\n            }\n            //Add More Protected route here\n            return null;\n      }\n      const response = await fetch(\"http://localhost:5000/graphql\", {\n            method: \"post\",\n            headers: {\n                  \"Content-type\": \"application/json\",\n                  authorization: `Bearer ${token}` || \"\",\n            },\n            body: JSON.stringify(QUERY_USER),\n      });\n      //console.log(\"response data:\", response);\n      if (response.ok) {\n            const result = await response.json();\n            return { user: result.data.user };\n            //console.log('User Info -->',  result)\n      } else {\n            if(router.pathname === \"/carts\") {\n              ctx.res.writeHead(302, {Location: '/signin'}) //302 Redirect Route code\n              ctx.res.end()\n            }\n            //Add More Protected route here\n            return null;\n      }\n      console.log(ctx.req.headers)\n};\n\nexport default apolloClient(MyApp);\n"]},"metadata":{},"sourceType":"module"}