{"ast":null,"code":"var _jsxFileName = \"/home/loki/Desktop/Projects/Shoppin/shop-client/components/Products/index.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_PRODUCTS } from '../../graphql/Products';\nimport ProductItem from './ProductItem';\n\nconst Products = () => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(QUERY_PRODUCTS); //, {pollInterval:3000} Add pollInterval to refresh page per second\n\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 23\n    }\n  }, \"Ooops....! Something went wrong, Plz try again later\");\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 25\n    }\n  }, \"loading...\");\n  return __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"product-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"product-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, data.products.map(prod => __jsx(ProductItem, {\n    key: prod.id,\n    prod: prod,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 29\n    }\n  })))));\n};\n\nexport default Products;","map":{"version":3,"sources":["/home/loki/Desktop/Projects/Shoppin/shop-client/components/Products/index.jsx"],"names":["React","useQuery","QUERY_PRODUCTS","ProductItem","Products","data","loading","error","products","map","prod","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BN,QAAQ,CAACC,cAAD,CAAzC,CADmB,CACuC;;AAC1D,MAAIK,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAAP;AACX,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQD,IAAI,CAACG,QAAL,CAAcC,GAAd,CAAkBC,IAAI,IAClB,MAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAvB;AAA2B,IAAA,IAAI,EAAED,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFR,CADJ,CADJ,CADJ;AAaH,CAjBD;;AAmBA,eAAeN,QAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_PRODUCTS } from '../../graphql/Products';\nimport ProductItem from './ProductItem';\n\n\nconst Products = () => {\n    const { data, loading, error } = useQuery(QUERY_PRODUCTS) //, {pollInterval:3000} Add pollInterval to refresh page per second\n    if (error) return <p>Ooops....! Something went wrong, Plz try again later</p>\n    if (loading) return <p>loading...</p>\n    return (\n        <main>\n            <div className=\"product-content\">\n                <div className=\"product-cards\">\n                    {\n                        data.products.map(prod =>\n                            <ProductItem key={prod.id} prod={prod} />\n                        )\n                    }\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}