{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { useMutation } from '@apollo/react-hooks';\nimport { UPDATE_PRODUCT, MY_PRODUCTS, QUERY_PRODUCTS } from '../graphql/Products';\n\nconst UserProductItem = ({\n  product\n}) => {\n  const {\n    0: edit,\n    1: setEdit\n  } = useState(false);\n  const {\n    0: file,\n    1: setFile\n  } = useState(null);\n  const {\n    0: productData,\n    1: setProductData\n  } = useState(product); //Create State\n  // const [productData, setProductData] = useState({\n  //   name: '',\n  //   description: '',\n  //   price: '',\n  //   imageUrl: ''\n  // })\n\n  const [updateProduct, {\n    loading,\n    error\n  }] = useMutation(UPDATE_PRODUCT, {\n    onCompleted: data => {\n      console.log(data);\n    },\n    refetchQueries: [{\n      query: QUERY_PRODUCTS\n    }, {\n      query: MY_PRODUCTS\n    }]\n  });\n\n  const handleChange = e => setProductData(_objectSpread(_objectSpread({}, productData), {}, {\n    [e.target.name]: e.target.value\n  }));\n\n  const selectFile = e => {\n    const files = e.target.files;\n    setFile(files[0]);\n    console.log(files);\n  }; //Upload File to Cloudinary\n\n\n  const uploadFile = async () => {\n    const data = new FormData();\n    data.append('file', file);\n    data.append('upload_preset', 'shoppin');\n    const res = await fetch('https://api.cloudinary.com/v1_1/swizce/image/upload', {\n      method: 'post',\n      body: data\n    });\n    const result = await res.json();\n    console.log(result);\n  };\n\n  const handleSubmit = async () => {\n    if (!file && productData === product) {\n      setProductData(product);\n      setEdit(false);\n      return;\n    }\n\n    console.log(productData);\n\n    try {// if(file){\n      //   const url = await uploadFile()\n      //   if(url) {\n      //      await updateProduct({\n      //       variables: {\n      //         ...productData,\n      //         imageUrl: url,\n      //         price: +productData.price\n      //       }\n      //     })\n      //   } else {\n      //     await updateProduct({\n      //       variables: {\n      //         ...productData,\n      //         imageUrl: productData.imageUrl,\n      //         price: +productData.price\n      //       }\n      //     })\n      //   }\n      // }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateColumns: '2fr 2fr 2fr 2fr 2fr',\n      width: '100%',\n      borderTop: '1px solid grey',\n      borderBottom: '1px solid grey'\n    }\n  }, __jsx(\"div\", {\n    style: {\n      margin: 'auto',\n      alignItems: 'center',\n      marginBottom: '5px'\n    }\n  }, !edit ? __jsx(\"img\", {\n    src: product.imageUrl,\n    alt: product.description,\n    width: \"80px\"\n  }) : __jsx(\"input\", {\n    style: {\n      margin: 'auto',\n      alignItems: 'center',\n      marginBottom: '5px'\n    },\n    type: \"file\",\n    name: \"file\",\n    onChange: selectFile\n  })), __jsx(\"div\", {\n    style: {\n      margin: 'auto',\n      alignItems: 'center',\n      marginBottom: '5px'\n    }\n  }, !edit ? __jsx(\"p\", null, product.name) : __jsx(\"input\", {\n    style: {\n      margin: '5px',\n      height: '30px'\n    },\n    type: \"text\",\n    name: \"name\",\n    value: product.name,\n    onChange: handleChange\n  })), __jsx(\"div\", {\n    style: {\n      margin: 'auto',\n      alignItems: 'center',\n      marginBottom: '5px'\n    }\n  }, !edit ? __jsx(\"p\", null, product.description) : __jsx(\"input\", {\n    style: {\n      margin: '5px',\n      height: '30px'\n    },\n    type: \"text\",\n    name: \"description\",\n    value: product.description,\n    onChange: handleChange\n  })), __jsx(\"div\", {\n    style: {\n      margin: 'auto',\n      alignItems: 'center',\n      marginBottom: '5px'\n    }\n  }, !edit ? __jsx(\"p\", null, product.price, \"THB\") : __jsx(\"input\", {\n    style: {\n      margin: '5px',\n      height: '30px'\n    },\n    type: \"text\",\n    name: \"price\",\n    value: product.price,\n    onChange: handleChange\n  })), !edit ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      margin: '5px',\n      alignItems: 'center',\n      display: 'flex',\n      alignItems: 'center'\n    }\n  }, __jsx(\"button\", {\n    style: {\n      margin: '10px',\n      background: 'orange',\n      color: 'white',\n      padding: '10px',\n      border: 'none'\n    },\n    onClick: () => setEdit(true)\n  }, \"Edit\"), __jsx(\"button\", {\n    style: {\n      margin: '10px',\n      background: 'red',\n      color: 'white',\n      padding: '10px',\n      border: 'none'\n    }\n  }, \"Delete\"))) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      margin: '5px',\n      alignItems: 'center',\n      display: 'flex',\n      alignItems: 'center'\n    }\n  }, __jsx(\"button\", {\n    style: {\n      margin: '10px',\n      background: 'orange',\n      color: 'white',\n      padding: '10px',\n      border: 'none'\n    },\n    onClick: () => setEdit(false)\n  }, \"Cancel\"), __jsx(\"button\", {\n    style: {\n      margin: '10px',\n      background: 'teal',\n      color: 'white',\n      padding: '10px',\n      border: 'none'\n    },\n    onClick: handleSubmit\n  }, \"Update\"))));\n};\n\nexport default UserProductItem;","map":null,"metadata":{},"sourceType":"module"}