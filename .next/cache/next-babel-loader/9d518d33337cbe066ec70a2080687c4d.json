{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n      query {\\n            brands {\\n                  id\\n                  name\\n                  logo\\n                  products {\\n                        id\\n                  }\\n            }\\n      }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n      mutation CREATE_BRAND($name: String!, $logo: String!) {\\n            createUserCategory(name: $name, logo: $logo) {\\n                  id\\n                  name\\n                  logo\\n            }\\n      }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      query MY_BRANDS {\\n            user {\\n                  id\\n                  brands {\\n                        id\\n                        name\\n                        logo\\n                  }\\n            }\\n      }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nexport var MY_BRANDS = gql(_templateObject());\nexport var CREATE_BRAND = gql(_templateObject2());\nexport var QUERY_BRANDS = gql(_templateObject3());","map":{"version":3,"sources":["/home/loki/Desktop/Projects/Shoppin/shop-client/graphql/Brands.js"],"names":["gql","MY_BRANDS","CREATE_BRAND","QUERY_BRANDS"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,OAAO,IAAMC,SAAS,GAAGD,GAAH,mBAAf;AAaP,OAAO,IAAME,YAAY,GAAGF,GAAH,oBAAlB;AAUP,OAAO,IAAMG,YAAY,GAAGH,GAAH,oBAAlB","sourcesContent":["import gql from \"graphql-tag\";\n\nexport const MY_BRANDS = gql`\n      query MY_BRANDS {\n            user {\n                  id\n                  brands {\n                        id\n                        name\n                        logo\n                  }\n            }\n      }\n`;\n\nexport const CREATE_BRAND = gql`\n      mutation CREATE_BRAND($name: String!, $logo: String!) {\n            createUserCategory(name: $name, logo: $logo) {\n                  id\n                  name\n                  logo\n            }\n      }\n`;\n\nexport const QUERY_BRANDS = gql`\n      query {\n            brands {\n                  id\n                  name\n                  logo\n                  products {\n                        id\n                  }\n            }\n      }\n`;\n"]},"metadata":{},"sourceType":"module"}