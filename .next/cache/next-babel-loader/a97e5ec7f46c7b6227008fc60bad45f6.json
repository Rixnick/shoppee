{"ast":null,"code":"var _jsxFileName = \"/home/loki/Desktop/Projects/Shoppin/shop-client/components/Login.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useContext } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { LOG_IN } from '../graphql/User';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport Cookies from 'js-cookie'; //import Auth Context from context Api\n\nimport { AuthContext } from '../contexts/AuthProvider';\n\nconst Login = () => {\n  const {\n    0: userInfo,\n    1: setUserInfo\n  } = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    setAuthUser\n  } = useContext(AuthContext);\n\n  const handleChange = e => {\n    setUserInfo(_objectSpread(_objectSpread({}, userInfo), {}, {\n      [e.target.name]: e.target.value //Target Name and Value\n\n    }));\n  };\n\n  const [login, {\n    loading,\n    error\n  }] = useMutation(LOG_IN, {\n    variables: _objectSpread({}, userInfo),\n    onCompleted: data => {\n      if (data) {\n        setAuthUser(data.login.user); //Set cookie here\n\n        Cookies.set('jwtToken', data.login.jwt);\n        setUserInfo({\n          email: \"\",\n          password: \"\"\n        });\n        Router.push('/products');\n      }\n    }\n  });\n\n  const handleSubmit = async e => {\n    try {\n      e.preventDefault();\n      await login();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      margin: '100px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      margin: 'auto',\n      width: '45%'\n    },\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Login Form\"), __jsx(\"input\", {\n    style: {\n      margin: '5px',\n      height: '30px'\n    },\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Enter Email\",\n    value: userInfo.email,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    style: {\n      margin: '5px',\n      height: '30px'\n    },\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Enter Password\",\n    value: userInfo.password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    style: {\n      width: '30%',\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"Forgot password?\", \" \", \" \", __jsx(\"span\", {\n    style: {\n      color: 'orange',\n      cursor: 'pointer'\n    },\n    onClick: () => Router.push('/signin/requestresetpassword'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 46\n    }\n  }, \"Click here\"))), __jsx(\"button\", {\n    style: {\n      margin: '5px',\n      padding: '10px',\n      background: 'teal',\n      color: 'white',\n      border: 'none',\n      cursor: 'pointer',\n      fontSize: '18px'\n    },\n    type: \"submit\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Login\"), __jsx(\"div\", {\n    style: {\n      width: '30%',\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, error && __jsx(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 31\n    }\n  }, error.graphQLErrors[0].message)), __jsx(Link, {\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, \"Don't have an account? Signup here\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/loki/Desktop/Projects/Shoppin/shop-client/components/Login.jsx"],"names":["React","useState","useContext","useMutation","LOG_IN","Link","Router","Cookies","AuthContext","Login","userInfo","setUserInfo","email","password","setAuthUser","handleChange","e","target","name","value","login","loading","error","variables","onCompleted","data","user","set","jwt","push","handleSubmit","preventDefault","console","log","margin","display","flexDirection","width","height","color","cursor","padding","background","border","fontSize","graphQLErrors","message"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { LOG_IN } from '../graphql/User';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport Cookies from 'js-cookie';\n\n//import Auth Context from context Api\nimport { AuthContext } from '../contexts/AuthProvider';\n\nconst Login = () => {\n    const [userInfo, setUserInfo] = useState({\n        email: \"\",\n        password: \"\"\n    })\n\n    const { setAuthUser } = useContext(AuthContext)\n\n\n    const handleChange = e => {\n        setUserInfo({\n            ...userInfo,\n            [e.target.name]: e.target.value, //Target Name and Value\n        })\n    }\n\n    const [login, { loading, error }] = useMutation(LOG_IN, {\n        variables: { ...userInfo },\n        onCompleted: data => {\n            if (data) {\n                setAuthUser(data.login.user)\n                //Set cookie here\n                Cookies.set('jwtToken', data.login.jwt)\n                setUserInfo({\n                    email: \"\",\n                    password: \"\"\n                })\n                Router.push('/products')\n            }\n        }\n    })\n\n\n    const handleSubmit = async e => {\n        try {\n            e.preventDefault()\n            await login()\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    return (\n        <div style={{ margin: '100px' }}>\n            <form\n                style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    margin: 'auto',\n                    width: '45%'\n                }}\n                onSubmit={handleSubmit} >\n                <h3>Login Form</h3>\n                <input\n                    style={{\n                        margin: '5px',\n                        height: '30px'\n                    }}\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={userInfo.email}\n                    onChange={handleChange}\n                />\n                <input\n                    style={{\n                        margin: '5px',\n                        height: '30px'\n                    }}\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Enter Password\"\n                    value={userInfo.password}\n                    onChange={handleChange}\n                />\n                <div style={{ width: '30%', margin: 'auto' }}>\n                    <p>Forgot password?{\" \"} <span style={{ color: 'orange', cursor: 'pointer' }} onClick={() => Router.push('/signin/requestresetpassword')}>Click here</span></p>\n                </div>\n                <button\n                    style={{\n                        margin: '5px',\n                        padding: '10px',\n                        background: 'teal',\n                        color: 'white',\n                        border: 'none',\n                        cursor: 'pointer',\n                        fontSize: '18px'\n                    }}\n                    type='submit'\n                    disabled={loading}>Login</button>\n                <div style={{ width: '30%', margin: 'auto' }}>\n                    {error && <p style={{ color: 'red' }}>{error.graphQLErrors[0].message}</p>}\n                </div>\n                <Link href=\"/signup\">\n                    <a>Don't have an account? Signup here</a>\n                </Link>\n            </form>\n\n        </div>\n    )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}