{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/loki/Desktop/Projects/Shoppin/shop-client/components/Product/index.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_PRODUCTS } from '../../graphql/Products';\n\nvar Products = function Products() {\n  _s();\n\n  var _useQuery = useQuery(QUERY_PRODUCTS),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error; //, {pollInterval:3000} Add pollInterval to refresh page per second\n\n\n  if (error) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 23\n    }\n  }, \"Ooops....! Something went wrong, Plz try again later\");\n  if (loading) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 25\n    }\n  }, \"loading...\");\n  return __jsx(\"div\", {\n    className: \"product-cards\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, data.products.map(function (prod) {\n    return __jsx(ProductItem, {\n      key: prod.id,\n      prod: prod,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }\n    });\n  }));\n};\n\n_s(Products, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/loki/Desktop/Projects/Shoppin/shop-client/components/Product/index.jsx"],"names":["React","useQuery","QUERY_PRODUCTS","Products","data","loading","error","products","map","prod","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,cAAT,QAA+B,wBAA/B;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AAAA,kBACcF,QAAQ,CAACC,cAAD,CADtB;AAAA,MACXE,IADW,aACXA,IADW;AAAA,MACLC,OADK,aACLA,OADK;AAAA,MACIC,KADJ,aACIA,KADJ,EACuC;;;AAC1D,MAAIA,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAAP;AACX,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,SACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQD,IAAI,CAACG,QAAL,CAAcC,GAAd,CAAkB,UAAAC,IAAI;AAAA,WAClB,MAAC,WAAD;AAAc,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAxB;AAA4B,MAAA,IAAI,EAAED,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADkB;AAAA,GAAtB,CAFR,CADJ;AASH,CAbD;;GAAMN,Q;UAC+BF,Q;;;KAD/BE,Q;AAeN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_PRODUCTS } from '../../graphql/Products';\n\n\nconst Products = () => {\n    const { data, loading, error } = useQuery(QUERY_PRODUCTS) //, {pollInterval:3000} Add pollInterval to refresh page per second\n    if (error) return <p>Ooops....! Something went wrong, Plz try again later</p>\n    if (loading) return <p>loading...</p>\n    return (\n        <div className=\"product-cards\">\n            {\n                data.products.map(prod => \n                    <ProductItem  key={prod.id} prod={prod}/>    \n                )\n            }\n        </div>\n    )\n}\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}