{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Link from 'next/link';\nimport { useQuery } from '@apollo/react-hooks';\nimport { AuthContext } from '../contexts/AuthProvider';\nimport { QUERY_PRODUCTS } from '../graphql/Products';\nimport Router from 'next/router';\nimport '../styles/_products.scss';\n\nfunction Products() {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(QUERY_PRODUCTS); //, {pollInterval:3000} Add pollInterval to refresh page per second\n\n  const {\n    user\n  } = useContext(AuthContext);\n  if (error) return __jsx(\"p\", null, \"Ooops....! Something went wrong, Plz try again later\");\n  if (loading) return __jsx(\"p\", null, \"loading...\");\n  return __jsx(\"div\", {\n    className: \"container\"\n  }, data.products.map(prod => __jsx(\"div\", {\n    className: \"product-container\"\n  }, __jsx(\"figure\", null, user && user.id === prod.user.id ? __jsx(Link, {\n    href: \"/manageProducts\"\n  }, __jsx(\"img\", {\n    src: prod.imageUrl,\n    alt: prod.description\n  })) : __jsx(Link, {\n    href: \"/products/product_detail\",\n    as: `/products/${prod.id}`\n  }, __jsx(\"img\", {\n    src: prod.imageUrl,\n    alt: prod.description\n  }))), __jsx(\"h3\", null, prod.name), __jsx(\"p\", {\n    className: \"description-text\"\n  }, prod.description), __jsx(\"p\", null, prod.price, \"-THB\"), user && user.id === prod.user.id ? __jsx(\"button\", {\n    className: \"btn-manage\",\n    onClick: () => Router.push('/manageProducts')\n  }, \"Manage Products\") : __jsx(\"button\", {\n    className: \"btn-add-carts\",\n    onClick: () => Router.push('/carts')\n  }, \"Add To Cart\"))));\n}\n\nexport default Products;","map":null,"metadata":{},"sourceType":"module"}