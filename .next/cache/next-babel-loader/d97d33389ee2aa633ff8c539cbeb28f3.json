{"ast":null,"code":"var _jsxFileName = \"/home/loki/Desktop/Projects/Shoppin/shop-client/components/Products.jsx\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_PRODUCTS } from '../graphql/Products';\nimport ProductItem from './ProductItem';\nimport '../styles/_products.scss';\n\nfunction Products() {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(QUERY_PRODUCTS); //, {pollInterval:3000} Add pollInterval to refresh page per second\n\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 23\n    }\n  }, \"Ooops....! Something went wrong, Plz try again later\");\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 25\n    }\n  }, \"loading...\");\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, data.products.map(prod => __jsx(ProductItem, {\n    key: prod.id,\n    prod: prod,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"Pagination\"));\n}\n\nexport default Products;","map":{"version":3,"sources":["/home/loki/Desktop/Projects/Shoppin/shop-client/components/Products.jsx"],"names":["React","useContext","useQuery","QUERY_PRODUCTS","ProductItem","Products","data","loading","error","products","map","prod","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,0BAAP;;AAEA,SAASC,QAAT,GAAoB;AAChB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BN,QAAQ,CAACC,cAAD,CAAzC,CADgB,CAC0C;;AAC1D,MAAIK,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAAP;AACX,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,SACI,4BACA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IAAI,CAACG,QAAL,CAAcC,GAAd,CAAkBC,IAAI,IACnB,MAAE,WAAF;AAAc,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAxB;AAA4B,IAAA,IAAI,EAAED,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANA,CADJ;AAYH;;AAED,eAAeN,QAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_PRODUCTS } from '../graphql/Products';\nimport ProductItem from './ProductItem';\nimport '../styles/_products.scss';\n\nfunction Products() {\n    const { data, loading, error } = useQuery(QUERY_PRODUCTS) //, {pollInterval:3000} Add pollInterval to refresh page per second\n    if (error) return <p>Ooops....! Something went wrong, Plz try again later</p>\n    if (loading) return <p>loading...</p>\n    return (\n        <>\n        <div className=\"products\">\n            {data.products.map(prod =>\n                < ProductItem key={prod.id} prod={prod} />\n            )}\n        </div>\n        <div >\n                Pagination\n        </div>\n        </>\n    )\n}\n\nexport default Products;"]},"metadata":{},"sourceType":"module"}