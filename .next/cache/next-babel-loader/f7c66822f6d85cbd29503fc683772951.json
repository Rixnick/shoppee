{"ast":null,"code":"var _jsxFileName = \"/home/loki/Desktop/Projects/Shoppin/shop-client/components/Leftbar/Brands.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_BRANDS } from '../../graphql/Brands';\n\nconst Brands = () => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(QUERY_BRANDS);\n  console.log(\"Brands: \", data);\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 23\n    }\n  }, \"Ooops....! Something went wrong, Plz try again later\");\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 25\n    }\n  }, \"loading...\");\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, __jsx(\"select\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, data.brands.map(brand => __jsx(React.Fragment, null, __jsx(\"option\", {\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 29\n    }\n  }, \"Select Brands\"), __jsx(\"option\", {\n    key: brand.id,\n    value: brand.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 29\n    }\n  }, brand.name)))));\n};\n\nexport default Brands;","map":{"version":3,"sources":["/home/loki/Desktop/Projects/Shoppin/shop-client/components/Leftbar/Brands.jsx"],"names":["React","useQuery","QUERY_BRANDS","Brands","data","loading","error","console","log","brands","map","brand","id","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,YAAT,QAA6B,sBAA7B;;AAGA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BL,QAAQ,CAACC,YAAD,CAAzC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,IAAxB;AAEA,MAAIE,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAAP;AACX,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQD,IAAI,CAACK,MAAL,CAAYC,GAAZ,CAAgBC,KAAK,IACjB,4BACI;AAAQ,IAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAQ,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAnB;AAAuB,IAAA,KAAK,EAAED,KAAK,CAACC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCD,KAAK,CAACE,IAA/C,CAFJ,CADJ,CAFR,CADJ,CADJ;AAcH,CApBD;;AAsBA,eAAeV,MAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_BRANDS } from '../../graphql/Brands';\n\n\nconst Brands = () => {\n    const { data, loading, error } = useQuery(QUERY_BRANDS)\n    console.log(\"Brands: \", data)\n\n    if (error) return <p>Ooops....! Something went wrong, Plz try again later</p>\n    if (loading) return <p>loading...</p>\n    return (\n        <div>\n            <select>\n                {\n                    data.brands.map(brand => (\n                        <>\n                            <option disabled>Select Brands</option>\n                            <option key={brand.id} value={brand.id}>{brand.name}</option>\n                        </>\n                    ))\n                }\n            </select>\n        </div>\n    )\n}\n\nexport default Brands;\n"]},"metadata":{},"sourceType":"module"}