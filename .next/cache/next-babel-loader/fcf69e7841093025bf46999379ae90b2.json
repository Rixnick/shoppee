{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport fetch from 'isomorphic-unfetch';\nimport { QUERY_PRODUCTS, MY_PRODUCTS, CREATE_PRODUCT } from '../graphql/Products';\nimport Sidebar from './Sidebar'; //\n\nconst ManageProducts = () => {\n  //Create State\n  const {\n    0: file,\n    1: setFile\n  } = useState(null);\n  const {\n    0: productData,\n    1: setProductData\n  } = useState({\n    name: '',\n    description: '',\n    price: '',\n    imageUrl: ''\n  });\n  const [createProduct, {\n    loading,\n    error\n  }] = useMutation(CREATE_PRODUCT, {\n    refetchQueries: [{\n      query: QUERY_PRODUCTS\n    }]\n  });\n\n  const handleChange = e => setProductData(_objectSpread(_objectSpread({}, productData), {}, {\n    [e.target.name]: e.target.value\n  }));\n\n  const selectFile = e => {\n    const files = e.target.files;\n    setFile(files[0]); //console.log(files)\n  }; //Upload File to Cloudinary\n\n\n  const uploadFile = async () => {\n    const data = new FormData();\n    data.append('file', file);\n    data.append('upload_preset', 'shoppin');\n    const res = await fetch('https://api.cloudinary.com/v1_1/swizce/image/upload', {\n      method: 'post',\n      body: data\n    });\n    const result = await res.json(); //console.log('image result',  result)\n\n    return result.secure_url;\n  };\n\n  const handleSubmit = async e => {\n    try {\n      e.preventDefault();\n      const url = await uploadFile(); // console.log('image Url:', url)\n\n      if (url) {\n        const result = await createProduct({\n          variables: _objectSpread(_objectSpread({}, productData), {}, {\n            price: +productData.price,\n            imageUrl: url\n          })\n        }); //console.log('Product Data:', result)\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Sidebar, null), __jsx(\"div\", {\n    style: {\n      margin: '0'\n    }\n  }, __jsx(\"form\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      margin: 'auto',\n      width: '45%'\n    },\n    onSubmit: handleSubmit\n  }, __jsx(\"h3\", null, \"Create My Product\"), __jsx(\"input\", {\n    style: {\n      margin: '5px',\n      height: '30px'\n    },\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Enter product name\",\n    value: productData.name,\n    onChange: handleChange\n  }), __jsx(\"input\", {\n    style: {\n      margin: '5px',\n      height: '30px'\n    },\n    type: \"text\",\n    name: \"description\",\n    placeholder: \"Enter product description\",\n    value: productData.description,\n    onChange: handleChange\n  }), __jsx(\"input\", {\n    style: {\n      margin: '5px',\n      height: '30px'\n    },\n    type: \"number\",\n    name: \"price\",\n    placeholder: \"Enter Product Price\",\n    value: productData.price,\n    onChange: handleChange\n  }), __jsx(\"input\", {\n    style: {\n      margin: '5px',\n      height: '30px'\n    },\n    type: \"file\",\n    name: \"file\",\n    placeholder: \"Enter Product Image\" //value={productData.imageUrl}\n    ,\n    onChange: selectFile\n  }), __jsx(\"button\", {\n    style: {\n      margin: '5px',\n      padding: '10px',\n      background: 'teal',\n      color: 'white',\n      border: 'none',\n      cursor: !productData.name || !productData.description || !productData.price || !file || loading ? 'not-allowed' : 'pointer',\n      fontSize: '18px'\n    },\n    type: \"submit\",\n    disabled: !productData.name || !productData.description || !productData.price || !file || loading\n  }, \"Submit\", loading ? 'ting...' : ''), __jsx(\"div\", {\n    style: {\n      width: '100%',\n      margin: 'auto'\n    }\n  }, error && __jsx(\"p\", {\n    style: {\n      color: 'red'\n    }\n  }, error.graphQLErrors[0].message), (!productData.name || !productData.description || !productData.price || !file) && __jsx(\"p\", {\n    style: {\n      color: 'red'\n    }\n  }, \"Please Fill all product required...!\")))));\n};\n\nexport default ManageProducts;","map":null,"metadata":{},"sourceType":"module"}